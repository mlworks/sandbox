{"version":3,"sources":["components/field/field-label-sc.js","components/field/field-sc.js","components/select/select-sc.js","components/select/select-wrapper-sc.js","components/field/field.js","components/field-row/field-row.js","components/select/select.js","components/button-primary/button-primary.js","pages/coffee/config.js","components/field/index.js","components/field-row/index.js","components/select/index.js","components/button-primary/index.js","components/select/select-faux-sc.js","components/field/field-caption-sc.js"],"names":["FieldLabelSC","styled","label","spacing","md","sm","fontSizes","small","FieldSC","FlexItem","lg","SelectSC","select","SelectFauxSC","border","focusColor","SelectWrapperSC","div","Field","caption","children","flex","id","htmlFor","FieldRow","FlexBox","Select","placeholder","options","value","onChange","props","useState","selectedValue","setValue","selectedOption","find","option","useEffect","event","target","disabled","map","icon","defaultProps","ButtonPrimary","Button","colors","accentRed","radius","neutrals","neutral00","darkAccentRed","Config","onLoadConfig","configList","setConfigs","selectedConfig","selectConfig","configs","localStorage","getItem","configOptions","Object","keys","JSON","parse","name","length","alignItems","onClick","attrs","padding","layout","tapSize","color","neutral10","FieldCaptionSC"],"mappings":"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","file":"static/js/24.d2b9d51b.chunk.js","sourcesContent":["import styled from 'styled-components'\n\n// Constants\nimport {fontSizes, spacing} from 'constants/styles'\n\nconst FieldLabelSC = styled.label`\n  display: block;\n  padding: 0 ${spacing.md};\n  margin-bottom: ${spacing.sm};\n  font-size: ${fontSizes.small};\n`\n\nexport default FieldLabelSC\n","import styled from 'styled-components'\n\n// Component\nimport FlexItem from 'components/flex-item'\n\n// Constants\nimport {spacing} from 'constants/styles'\n\nconst FieldSC = styled(FlexItem)`\n  width: 100%;\n\n  & + & {\n    margin-left: ${spacing.lg};\n  }\n`\n\nexport default FieldSC\n","import styled from 'styled-components'\n\n// SC\nimport SelectFauxSC from './select-faux-sc'\n\n// Constants\nimport {border} from 'constants/styles'\n\nconst SelectSC = styled.select`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  display: block;\n  width: 100%;\n  opacity: 0;\n  appearance: none;\n\n  &:active + ${SelectFauxSC}, &:focus + ${SelectFauxSC} {\n    border-color: ${border.focusColor};\n  }\n`\n\nexport default SelectSC\n","import styled from 'styled-components'\n\nconst SelectWrapperSC = styled.div`\n  position: relative;\n`\n\nexport default SelectWrapperSC\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n// SC\nimport FieldSC from './field-sc'\nimport FieldCaptionSC from './field-caption-sc'\nimport FieldLabelSC from './field-label-sc'\n\nconst Field = ({caption, children, flex, id, label}) => (\n  <FieldSC flex={flex}>\n    <FieldLabelSC htmlFor={id}>{label}</FieldLabelSC>\n    {children}\n    {caption && <FieldCaptionSC>{caption}</FieldCaptionSC>}\n  </FieldSC>\n)\n\nField.propTypes = {\n  caption: PropTypes.node,\n  children: PropTypes.node,\n  flex: PropTypes.string,\n  id: PropTypes.string,\n  label: PropTypes.node,\n}\n\nexport default Field\n","import styled from 'styled-components'\n\n// Component\nimport FlexBox from 'components/flex-box'\n\n// Constants\nimport {spacing} from 'constants/styles'\n\nconst FieldRow = styled(FlexBox)`\n  & + & {\n    margin-top: ${spacing.lg};\n  }\n`\n\nexport default FieldRow\n\n","import React, {useEffect, useState} from 'react'\nimport PropTypes from 'prop-types'\n\n// Components\nimport FlexItem from 'components/flex-item'\nimport MaterialIcon from 'components/material-icon'\n\n// SC\nimport SelectSC from './select-sc'\nimport SelectFauxSC from './select-faux-sc'\nimport SelectWrapperSC from './select-wrapper-sc'\n\nconst Select = ({placeholder, options, value, onChange, ...props}) => {\n  const [selectedValue, setValue] = useState(value)\n  const selectedOption =\n    options.find(option => option.value === selectedValue) || {}\n\n  useEffect(() => {\n    setValue(value)\n  }, [value])\n\n  return (\n    <SelectWrapperSC>\n      <SelectSC\n        {...props}\n        value={selectedValue}\n        onChange={event => {\n          setValue(event.target.value)\n          onChange(event)\n        }}\n      >\n        {placeholder && (\n          <option value=\"\" disabled>\n            {placeholder}\n          </option>\n        )}\n        {options.map(option => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </SelectSC>\n      <SelectFauxSC>\n        <FlexItem>{selectedOption.label || placeholder}</FlexItem>\n        <FlexItem flex=\"0 0 auto\">\n          <MaterialIcon icon=\"arrow_down\" />\n        </FlexItem>\n      </SelectFauxSC>\n    </SelectWrapperSC>\n  )\n}\n\nSelect.propTypes = {\n  options: PropTypes.array,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n}\n\nSelect.defaultProps = {\n  placeholder: 'Select an option',\n  value: '',\n  onChange: () => {},\n}\n\nexport default Select\n","import styled from 'styled-components'\n\n// SC\nimport Button from 'components/button'\n\n// Constants\nimport {border, colors, neutrals} from 'constants/styles'\n\nconst ButtonPrimary = styled(Button)`\n  background: ${colors.accentRed};\n  border-radius: ${border.radius};\n  color: ${neutrals.neutral00};\n\n  &:active:not([disabled]),\n  &:hover:not([disabled]) {\n    background: ${colors.darkAccentRed};\n  }\n\n  &[disabled] {\n    background: #bd9595;\n    colors: #dadada;\n  }\n`\n\nexport default ButtonPrimary\n","import React, {useEffect, useState} from 'react'\n\n// Components\nimport ButtonPrimary from 'components/button-primary'\nimport Field from 'components/field'\nimport FieldRow from 'components/field-row'\nimport Select from 'components/select'\n\nconst Config = ({onLoadConfig}) => {\n  const [configList, setConfigs] = useState([])\n  const [selectedConfig, selectConfig] = useState('')\n\n  useEffect(() => {\n    const configs = localStorage.getItem('brewConfigs')\n    if (configs) {\n      const configOptions = Object.keys(JSON.parse(configs)).map((name) => ({\n        label: name,\n        value: name,\n      }))\n\n      setConfigs(configOptions)\n    }\n  }, [])\n\n  if (!configList.length) return null\n\n  return (\n    <FieldRow alignItems=\"flex-end\">\n      <Field label=\"Saved Configs\" id=\"configs\">\n        <Select\n          id=\"configs\"\n          options={configList}\n          value={selectedConfig}\n          onChange={(event) => {\n            selectConfig(event.target.value)\n          }}\n        />\n      </Field>\n      <Field flex=\"0 0 120px\">\n        <ButtonPrimary\n          disabled={!selectedConfig}\n          onClick={() =>\n            onLoadConfig(\n              JSON.parse(localStorage.getItem('brewConfigs'))[selectedConfig]\n            )\n          }\n        >\n          Load Config\n        </ButtonPrimary>\n      </Field>\n    </FieldRow>\n  )\n}\n\nexport default Config\n","import Field from './field'\nexport default Field\n","import FieldRow from './field-row'\nexport default FieldRow\n","import Select from './select'\nexport default Select\n","import ButtonPrimary from './button-primary'\nexport default ButtonPrimary\n","import styled from 'styled-components'\n\n// Component\nimport FlexBox from 'components/flex-box'\n\n// Constants\nimport {border, layout, neutrals} from 'constants/styles'\n\nconst SelectFauxSC = styled(FlexBox).attrs({\n  alignItems: 'center',\n  padding: '0 md',\n})`\n  min-height: ${layout.tapSize};\n  border-radius: ${border.radius};\n  border: 1px solid ${border.color};\n  background: ${neutrals.neutral10};\n\n  > div:first-child {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n`\n\nexport default SelectFauxSC\n","import styled from 'styled-components'\n\n// Constants\nimport {fontSizes, spacing} from 'constants/styles'\n\nconst FieldCaptionSC = styled.div`\n  margin-top: ${spacing.sm};\n  padding: 0 ${spacing.md};\n  font-size: ${fontSizes.small};\n`\n\nexport default FieldCaptionSC\n"],"sourceRoot":""}