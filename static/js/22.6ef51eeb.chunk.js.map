{"version":3,"sources":["components/field/field-label-sc.js","components/field/field-sc.js","components/select/select-sc.js","components/select/select-wrapper-sc.js","components/field/field.js","components/field-row/field-row.js","components/input/input-sc.js","components/input/input-wrapper-sc.js","components/select/select.js","components/input/input.js","components/ratio/ratio-sc.js","components/ratio/ratio.js","pages/coffee/setting.js","components/field/index.js","components/field-row/index.js","components/select/index.js","components/input/index.js","components/ratio/index.js","components/select/select-faux-sc.js","components/input/input-counter-sc.js","components/field/field-caption-sc.js"],"names":["FieldLabelSC","styled","label","spacing","md","sm","fontSizes","small","FieldSC","FlexItem","lg","SelectSC","select","SelectFauxSC","border","focusColor","SelectWrapperSC","div","Field","caption","children","flex","id","htmlFor","FieldRow","FlexBox","InputSC","input","layout","tapSize","radius","color","neutrals","neutral10","maxLength","InputWrapperSC","InputCounterSC","neutral00","Select","placeholder","options","value","onChange","props","useState","selectedValue","setValue","selectedOption","find","option","useEffect","event","target","disabled","map","icon","defaultProps","Input","type","length","count","setCount","charCountLeft","aria-describedby","aria-label","title","RatioSC","index","Ratio","items","item","Setting","currentGram","currentWaterRatio","currentSweetnessAcidityRatio","currentStrengthPourCount","pourList","totalGram","onChangeGram","onChangeWaterRatio","onChangeSweetnessAcidityRatio","onChangeStrengthPourCount","Fragment","min","max","step","valueAsNumber","marginTop","pour","currentTotal","attrs","alignItems","padding","justifyContent","neutral30","FieldCaptionSC"],"mappings":"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","file":"static/js/22.6ef51eeb.chunk.js","sourcesContent":["import styled from 'styled-components'\n\n// Constants\nimport {fontSizes, spacing} from 'constants/styles'\n\nconst FieldLabelSC = styled.label`\n  display: block;\n  padding: 0 ${spacing.md};\n  margin-bottom: ${spacing.sm};\n  font-size: ${fontSizes.small};\n`\n\nexport default FieldLabelSC\n","import styled from 'styled-components'\n\n// Component\nimport FlexItem from 'components/flex-item'\n\n// Constants\nimport {spacing} from 'constants/styles'\n\nconst FieldSC = styled(FlexItem)`\n  width: 100%;\n\n  & + & {\n    margin-left: ${spacing.lg};\n  }\n`\n\nexport default FieldSC\n","import styled from 'styled-components'\n\n// SC\nimport SelectFauxSC from './select-faux-sc'\n\n// Constants\nimport {border} from 'constants/styles'\n\nconst SelectSC = styled.select`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  display: block;\n  width: 100%;\n  opacity: 0;\n  appearance: none;\n\n  &:active + ${SelectFauxSC}, &:focus + ${SelectFauxSC} {\n    border-color: ${border.focusColor};\n  }\n`\n\nexport default SelectSC\n","import styled from 'styled-components'\n\nconst SelectWrapperSC = styled.div`\n  position: relative;\n`\n\nexport default SelectWrapperSC\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n// SC\nimport FieldSC from './field-sc'\nimport FieldCaptionSC from './field-caption-sc'\nimport FieldLabelSC from './field-label-sc'\n\nconst Field = ({caption, children, flex, id, label}) => (\n  <FieldSC flex={flex}>\n    <FieldLabelSC htmlFor={id}>{label}</FieldLabelSC>\n    {children}\n    {caption && <FieldCaptionSC>{caption}</FieldCaptionSC>}\n  </FieldSC>\n)\n\nField.propTypes = {\n  caption: PropTypes.node,\n  children: PropTypes.node,\n  flex: PropTypes.string,\n  id: PropTypes.string,\n  label: PropTypes.node,\n}\n\nexport default Field\n","import styled from 'styled-components'\n\n// Component\nimport FlexBox from 'components/flex-box'\n\n// Constants\nimport {spacing} from 'constants/styles'\n\nconst FieldRow = styled(FlexBox)`\n  & + & {\n    margin-top: ${spacing.lg};\n  }\n`\n\nexport default FieldRow\n\n","import styled from 'styled-components'\n\n// Constants\nimport {border, layout, neutrals, spacing} from 'constants/styles'\n\nconst InputSC = styled.input`\n  display: block;\n  width: 100%;\n  padding: ${spacing.md};\n  min-height: ${layout.tapSize};\n  border-radius: ${border.radius};\n  border: 1px solid ${border.color};\n  background: ${neutrals.neutral10};\n\n  outline: 0;\n\n  &:focus {\n    border-color: ${border.focusColor};\n  }\n\n  ${({maxLength}) =>\n    !!maxLength &&\n    `\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n  `}\n\n  &[type=\"range\"] {\n    padding: 0;\n    min-height: initial;\n  }\n`\n\nexport default InputSC\n","import styled from 'styled-components'\n\n// Component\nimport FlexBox from 'components/flex-box'\n\n// SC\nimport InputCounterSC from './input-counter-sc'\n\n// Constants\nimport {border, neutrals} from 'constants/styles'\n\nconst InputWrapperSC = styled(FlexBox)`\n  &:focus-within {\n    ${InputCounterSC} {\n      background: ${border.focusColor};\n      color: ${neutrals.neutral00};\n    }\n  }\n`\n\nexport default InputWrapperSC\n","import React, {useEffect, useState} from 'react'\nimport PropTypes from 'prop-types'\n\n// Components\nimport FlexItem from 'components/flex-item'\nimport MaterialIcon from 'components/material-icon'\n\n// SC\nimport SelectSC from './select-sc'\nimport SelectFauxSC from './select-faux-sc'\nimport SelectWrapperSC from './select-wrapper-sc'\n\nconst Select = ({placeholder, options, value, onChange, ...props}) => {\n  const [selectedValue, setValue] = useState(value)\n  const selectedOption =\n    options.find(option => option.value === selectedValue) || {}\n\n  useEffect(() => {\n    setValue(value)\n  }, [value])\n\n  return (\n    <SelectWrapperSC>\n      <SelectSC\n        {...props}\n        value={selectedValue}\n        onChange={event => {\n          setValue(event.target.value)\n          onChange(event)\n        }}\n      >\n        {placeholder && (\n          <option value=\"\" disabled>\n            {placeholder}\n          </option>\n        )}\n        {options.map(option => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </SelectSC>\n      <SelectFauxSC>\n        <FlexItem>{selectedOption.label || placeholder}</FlexItem>\n        <FlexItem flex=\"0 0 auto\">\n          <MaterialIcon icon=\"arrow_down\" />\n        </FlexItem>\n      </SelectFauxSC>\n    </SelectWrapperSC>\n  )\n}\n\nSelect.propTypes = {\n  options: PropTypes.array,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n}\n\nSelect.defaultProps = {\n  placeholder: 'Select an option',\n  value: '',\n  onChange: () => {},\n}\n\nexport default Select\n","import React, {useEffect, useState} from 'react'\nimport PropTypes from 'prop-types'\n\n// Components\nimport FlexItem from 'components/flex-item'\n\n// SC\nimport InputSC from './input-sc'\nimport InputCounterSC from './input-counter-sc'\nimport InputWrapperSC from './input-wrapper-sc'\n\nconst Input = ({maxLength, type, value, onChange, ...props}) => {\n  const [count, setCount] = useState(maxLength - value.length)\n  const charCountLeft = maxLength - count\n\n  useEffect(() => {\n    setCount(value.length)\n  }, [maxLength, value])\n\n  return (\n    <InputWrapperSC>\n      <FlexItem>\n        <InputSC\n          {...props}\n          aria-describedby={maxLength && 'char-limit'}\n          maxLength={maxLength}\n          value={value}\n          type={type}\n          onChange={event => {\n            setCount(event.target.value.length)\n            onChange(event)\n          }}\n        />\n      </FlexItem>\n      {maxLength && (\n        <InputCounterSC\n          id=\"char-limit\"\n          aria-label={`${charCountLeft} characters remaining`}\n          title={`${charCountLeft} characters remaining`}\n        >\n          {count}/{maxLength}\n        </InputCounterSC>\n      )}\n    </InputWrapperSC>\n  )\n}\n\nInput.propTypes = {\n  maxLength: PropTypes.number,\n  type: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onChange: PropTypes.func,\n}\n\nInput.defaultProps = {\n  type: 'text',\n  value: '',\n  onChange: () => {},\n}\n\nexport default Input\n","import styled from 'styled-components'\n\nconst RatioSC = styled.div`\n  height: 48px;\n  background: rgba(121, 85, 72, ${({index}) => 0.4 + index / 10});\n`\n\nexport default RatioSC\n","// Component\nimport FlexBox from 'components/flex-box'\nimport FlexItem from 'components/flex-item'\nimport RatioSC from './ratio-sc'\n\nconst Ratio = ({items}) => {\n  return (\n    <FlexBox>\n      {items.map((item, index) => (\n        <FlexItem key={`${item}_${index}`} flex={`0 1 ${item}%`}>\n          <RatioSC index={index} />\n        </FlexItem>\n      ))}\n    </FlexBox>\n  )\n}\n\nexport default Ratio\n","import React from 'react'\n\n// Components\n\nimport Field from 'components/field'\nimport FieldRow from 'components/field-row'\nimport FlexBox from 'components/flex-box'\nimport FlexItem from 'components/flex-item'\nimport Input from 'components/input'\nimport Ratio from 'components/ratio'\nimport Select from 'components/select'\nimport Spacing from 'components/spacing'\n\nconst Setting = ({\n  currentGram,\n  currentWaterRatio,\n  currentSweetnessAcidityRatio,\n  currentStrengthPourCount,\n  pourList,\n  totalGram,\n  onChangeGram,\n  onChangeWaterRatio,\n  onChangeSweetnessAcidityRatio,\n  onChangeStrengthPourCount,\n}) => {\n  return (\n    <React.Fragment>\n      <FieldRow>\n        <Field label=\"Coffee Gram\" id=\"gram\">\n          <Input\n            id=\"gram\"\n            type=\"tel\"\n            value={currentGram}\n            onChange={(event) => onChangeGram(event.target.value)}\n          />\n        </Field>\n        <Field label=\"Water Ratio\" id=\"water-ratio\">\n          <Select\n            id=\"water-ratio\"\n            options={[\n              {\n                value: '15',\n                label: '15',\n              },\n              {\n                value: '16',\n                label: '16',\n              },\n              {\n                value: '17',\n                label: '17',\n              },\n            ]}\n            value={currentWaterRatio}\n            onChange={(event) => onChangeWaterRatio(event.target.value)}\n          />\n        </Field>\n      </FieldRow>\n      <FieldRow>\n        <FlexItem flex=\"0 0 40%\">\n          <Field\n            label={\n              <FlexBox>\n                <FlexItem>Sweetness</FlexItem>\n                <FlexItem flex=\"0 0 auto\">Acidity</FlexItem>\n              </FlexBox>\n            }\n            id=\"40-ratio\"\n          >\n            <Input\n              id=\"40-ratio\"\n              type=\"range\"\n              min=\"10\"\n              max=\"90\"\n              step=\"10\"\n              value={currentSweetnessAcidityRatio}\n              onChange={(event) =>\n                onChangeSweetnessAcidityRatio(event.target.valueAsNumber)\n              }\n            />\n          </Field>\n        </FlexItem>\n        <FlexItem>\n          <Field\n            label={\n              <FlexBox>\n                <FlexItem>Light</FlexItem>\n                <FlexItem flex=\"0 0 auto\">Strong</FlexItem>\n              </FlexBox>\n            }\n            id=\"60-pour\"\n          >\n            <Input\n              id=\"60-pour\"\n              type=\"range\"\n              min=\"1\"\n              max=\"5\"\n              step=\"1\"\n              value={currentStrengthPourCount}\n              onChange={(event) =>\n                onChangeStrengthPourCount(event.target.valueAsNumber)\n              }\n            />\n          </Field>\n        </FlexItem>\n      </FieldRow>\n      <Spacing marginTop=\"md\">\n        <Ratio\n          items={pourList.map((item) => {\n            return (item.currentGram / totalGram) * 100\n          })}\n        />\n      </Spacing>\n      <Spacing marginTop=\"lg\">\n        {pourList.map((pour, index) => (\n          <div key={index}>\n            Pour {1 + index}: {pour.currentGram}g. (Total: {pour.currentTotal}\n            g)\n          </div>\n        ))}\n      </Spacing>\n    </React.Fragment>\n  )\n}\n\nexport default Setting\n","import Field from './field'\nexport default Field\n","import FieldRow from './field-row'\nexport default FieldRow\n","import Select from './select'\nexport default Select\n","import Input from './input'\nexport default Input\n","import Ratio from './ratio'\nexport default Ratio\n","import styled from 'styled-components'\n\n// Component\nimport FlexBox from 'components/flex-box'\n\n// Constants\nimport {border, layout, neutrals} from 'constants/styles'\n\nconst SelectFauxSC = styled(FlexBox).attrs({\n  alignItems: 'center',\n  padding: '0 md',\n})`\n  min-height: ${layout.tapSize};\n  border-radius: ${border.radius};\n  border: 1px solid ${border.color};\n  background: ${neutrals.neutral10};\n\n  > div:first-child {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n`\n\nexport default SelectFauxSC\n","import styled from 'styled-components'\n\n// Component\nimport FlexBox from 'components/flex-box'\n\n// Constants\nimport {border, fontSizes, neutrals} from 'constants/styles'\n\nconst InputCounterSC = styled(FlexBox).attrs({\n  alignItems: 'center',\n  justifyContent: 'center',\n  padding: 'md',\n})`\n  flex: 0 0 auto;\n  align-self: stretch;\n  background: ${neutrals.neutral30};\n  border-top-right-radius: ${border.radius};\n  border-bottom-right-radius: ${border.radius};\n  font-size: ${fontSizes.small};\n`\n\nexport default InputCounterSC\n","import styled from 'styled-components'\n\n// Constants\nimport {fontSizes, spacing} from 'constants/styles'\n\nconst FieldCaptionSC = styled.div`\n  margin-top: ${spacing.sm};\n  padding: 0 ${spacing.md};\n  font-size: ${fontSizes.small};\n`\n\nexport default FieldCaptionSC\n"],"sourceRoot":""}