{"version":3,"sources":["components/input/input-sc.js","components/input/input-wrapper-sc.js","components/select/select-sc.js","components/select/select-wrapper-sc.js","components/button-primary/button-primary.js","components/field/field.js","components/field-row/field-row.js","components/input/input.js","components/select/select.js","components/form-example/form-example.js","components/button-primary/index.js","components/field/index.js","components/field-row/index.js","components/input/index.js","components/select/index.js","components/form-example/index.js","components/input/input-counter-sc.js","components/select/select-faux-sc.js","components/field/field-label-sc.js","components/field/field-sc.js"],"names":["InputSC","styled","input","spacing","md","layout","tapSize","border","radius","color","neutrals","neutral10","focusColor","maxLength","InputWrapperSC","FlexBox","InputCounterSC","neutral00","SelectSC","select","SelectFauxSC","SelectWrapperSC","div","ButtonPrimary","Button","colors","accentRed","darkAccentRed","Field","children","flex","id","label","htmlFor","FieldRow","lg","Input","type","value","onChange","props","useState","length","count","setCount","charCountLeft","useEffect","aria-describedby","event","target","aria-label","title","defaultProps","Select","placeholder","options","selectedValue","setValue","selectedOption","find","option","disabled","map","key","icon","useInput","initialValue","reset","bind","FormExample","firstName","bindFirstName","resetFirstName","lastName","bindLastName","resetLastName","address","bindAddress","resetAddress","country","bindCountry","resetCountry","onSubmit","preventDefault","console","log","marginTop","attrs","alignItems","justifyContent","padding","neutral30","fontSizes","small","FieldLabelSC","sm","FieldSC","FlexItem"],"mappings":"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","file":"static/js/3.8a3a401e.chunk.js","sourcesContent":["import styled from 'styled-components'\n\n// Constants\nimport {border, layout, neutrals, spacing} from 'constants/styles'\n\nconst InputSC = styled.input`\n  display: block;\n  width: 100%;\n  padding: ${spacing.md};\n  min-height: ${layout.tapSize};\n  border-radius: ${border.radius};\n  border: 1px solid ${border.color};\n  background: ${neutrals.neutral10};\n\n  outline: 0;\n\n  &:focus {\n    border-color: ${border.focusColor};\n  }\n\n  ${({maxLength}) =>\n    !!maxLength &&\n    `\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n  `}\n`\n\nexport default InputSC\n","import styled from 'styled-components'\n\n// Component\nimport FlexBox from 'components/flex-box'\n\n// SC\nimport InputCounterSC from './input-counter-sc'\n\n// Constants\nimport {border, neutrals} from 'constants/styles'\n\nconst InputWrapperSC = styled(FlexBox)`\n  &:focus-within {\n    ${InputCounterSC} {\n      background: ${border.focusColor};\n      color: ${neutrals.neutral00};\n    }\n  }\n`\n\nexport default InputWrapperSC\n","import styled from 'styled-components'\n\n// SC\nimport SelectFauxSC from './select-faux-sc'\n\n// Constants\nimport {border} from 'constants/styles'\n\nconst SelectSC = styled.select`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  display: block;\n  width: 100%;\n  opacity: 0;\n  appearance: none;\n\n  &:active + ${SelectFauxSC}, &:focus + ${SelectFauxSC} {\n    border-color: ${border.focusColor};\n  }\n`\n\nexport default SelectSC\n","import styled from 'styled-components'\n\nconst SelectWrapperSC = styled.div`\n  position: relative;\n`\n\nexport default SelectWrapperSC\n","import styled from 'styled-components'\n\n// SC\nimport Button from 'components/button'\n\n// Constants\nimport {border, colors, neutrals} from 'constants/styles'\n\nconst ButtonPrimary = styled(Button)`\n  background: ${colors.accentRed};\n  border-radius: ${border.radius};\n  color: ${neutrals.neutral00};\n\n  &:active:not([disabled]),\n  &:hover:not([disabled]) {\n    background: ${colors.darkAccentRed};\n  }\n\n  &[disabled] {\n    background: #bd9595;\n    colors: #dadada;\n  }\n`\n\nexport default ButtonPrimary\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n// SC\nimport FieldSC from './field-sc'\nimport FieldLabelSC from './field-label-sc'\n\nconst Field = ({children, flex, id, label}) => (\n  <FieldSC flex={flex}>\n    <FieldLabelSC htmlFor={id}>{label}</FieldLabelSC>\n    {children}\n  </FieldSC>\n)\n\nField.propTypes = {\n  children: PropTypes.node,\n  flex: PropTypes.string,\n  id: PropTypes.string,\n  label: PropTypes.string,\n}\n\nexport default Field\n","import styled from 'styled-components'\n\n// Component\nimport FlexBox from 'components/flex-box'\n\n// Constants\nimport {spacing} from 'constants/styles'\n\nconst FieldRow = styled(FlexBox)`\n  & + & {\n    margin-top: ${spacing.lg};\n  }\n`\n\nexport default FieldRow\n\n","import React, {useEffect, useState} from 'react'\nimport PropTypes from 'prop-types'\n\n// Components\nimport FlexItem from 'components/flex-item'\n\n// SC\nimport InputSC from './input-sc'\nimport InputCounterSC from './input-counter-sc'\nimport InputWrapperSC from './input-wrapper-sc'\n\nconst Input = ({maxLength, type, value, onChange, ...props}) => {\n  const [count, setCount] = useState(maxLength - value.length)\n  const charCountLeft = maxLength - count\n\n  useEffect(() => {\n    setCount(value.length)\n  }, [maxLength, value])\n\n  return (\n    <InputWrapperSC>\n      <FlexItem>\n        <InputSC\n          {...props}\n          aria-describedby={maxLength && 'char-limit'}\n          maxLength={maxLength}\n          value={value}\n          type={type}\n          onChange={event => {\n            setCount(event.target.value.length)\n            onChange(event)\n          }}\n        />\n      </FlexItem>\n      {maxLength && (\n        <InputCounterSC\n          id=\"char-limit\"\n          aria-label={`${charCountLeft} characters remaining`}\n          title={`${charCountLeft} characters remaining`}\n        >\n          {count}/{maxLength}\n        </InputCounterSC>\n      )}\n    </InputWrapperSC>\n  )\n}\n\nInput.propTypes = {\n  maxLength: PropTypes.number,\n  type: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onChange: PropTypes.func,\n}\n\nInput.defaultProps = {\n  type: 'text',\n  value: '',\n  onChange: () => {},\n}\n\nexport default Input\n","import React, {useEffect, useState} from 'react'\nimport PropTypes from 'prop-types'\n\n// Components\nimport FlexItem from 'components/flex-item'\nimport MaterialIcon from 'components/material-icon'\n\n// SC\nimport SelectSC from './select-sc'\nimport SelectFauxSC from './select-faux-sc'\nimport SelectWrapperSC from './select-wrapper-sc'\n\nconst Select = ({placeholder, options, value, onChange, ...props}) => {\n  const [selectedValue, setValue] = useState(value)\n  const selectedOption =\n    options.find(option => option.value === selectedValue) || {}\n\n  useEffect(() => {\n    setValue(value)\n  }, [value])\n\n  return (\n    <SelectWrapperSC>\n      <SelectSC\n        {...props}\n        value={selectedValue}\n        onChange={event => {\n          setValue(event.target.value)\n          onChange(event)\n        }}\n      >\n        {placeholder && (\n          <option value=\"\" disabled>\n            {placeholder}\n          </option>\n        )}\n        {options.map(option => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </SelectSC>\n      <SelectFauxSC>\n        <FlexItem>{selectedOption.label || placeholder}</FlexItem>\n        <FlexItem flex=\"0 0 auto\">\n          <MaterialIcon icon=\"arrow_down\" />\n        </FlexItem>\n      </SelectFauxSC>\n    </SelectWrapperSC>\n  )\n}\n\nSelect.propTypes = {\n  options: PropTypes.array,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n}\n\nSelect.defaultProps = {\n  placeholder: 'Select an option',\n  value: '',\n  onChange: () => {},\n}\n\nexport default Select\n","import React, {useState} from 'react'\n\n// Components\nimport ButtonPrimary from 'components/button-primary'\nimport Field from 'components/field'\nimport FieldRow from 'components/field-row'\nimport Input from 'components/input'\nimport Select from 'components/select'\nimport Spacing from 'components/spacing'\n\n// https://rangle.io/blog/simplifying-controlled-inputs-with-hooks/\nconst useInput = initialValue => {\n  const [value, setValue] = useState(initialValue)\n\n  return {\n    value,\n    setValue,\n    reset: () => setValue(''),\n    bind: {\n      value,\n      onChange: event => {\n        setValue(event.target.value)\n      },\n    },\n  }\n}\n\nconst FormExample = () => {\n  const {\n    value: firstName,\n    bind: bindFirstName,\n    reset: resetFirstName,\n  } = useInput('')\n  const {value: lastName, bind: bindLastName, reset: resetLastName} = useInput(\n    ''\n  )\n  const {value: address, bind: bindAddress, reset: resetAddress} = useInput('')\n  const {value: country, bind: bindCountry, reset: resetCountry} = useInput('')\n\n  return (\n    <form\n      onSubmit={event => {\n        event.preventDefault()\n        console.log({\n          address,\n          firstName,\n          lastName,\n          country,\n        })\n        resetFirstName()\n        resetLastName()\n        resetAddress()\n        resetCountry()\n      }}\n    >\n      <FieldRow>\n        <Field label=\"First Name\" id=\"firstName\">\n          <Input id=\"firstName\" maxLength={25} {...bindFirstName} />\n        </Field>\n        <Field label=\"Last Name\" id=\"lastName\">\n          <Input id=\"lastName\" maxLength={25} {...bindLastName} />\n        </Field>\n      </FieldRow>\n\n      <FieldRow>\n        <Field label=\"Address\" id=\"address\">\n          <Input\n            id=\"address\"\n            placeholder=\"E.g. 123 Fake Street\"\n            {...bindAddress}\n          />\n        </Field>\n        <Field label=\"Country\" id=\"country\" flex=\"0 0 30%\">\n          <Select\n            id=\"country\"\n            options={[\n              {\n                label: 'Canada',\n                value: 'ca',\n              },\n              {\n                label: 'United States',\n                value: 'us',\n              },\n            ]}\n            {...bindCountry}\n          />\n        </Field>\n      </FieldRow>\n\n      <Spacing marginTop=\"lg\">\n        <ButtonPrimary\n          disabled={\n            !address.length ||\n            !firstName.length ||\n            !lastName.length ||\n            !country.length\n          }\n          type=\"submit\"\n        >\n          Submit\n        </ButtonPrimary>\n      </Spacing>\n    </form>\n  )\n}\n\nexport default FormExample\n","import ButtonPrimary from './button-primary'\nexport default ButtonPrimary\n","import Field from './field'\nexport default Field\n","import FieldRow from './field-row'\nexport default FieldRow\n","import Input from './input'\nexport default Input\n","import Select from './select'\nexport default Select\n","import FormExample from './form-example'\nexport default FormExample\n","import styled from 'styled-components'\n\n// Component\nimport FlexBox from 'components/flex-box'\n\n// Constants\nimport {border, fontSizes, neutrals} from 'constants/styles'\n\nconst InputCounterSC = styled(FlexBox).attrs({\n  alignItems: 'center',\n  justifyContent: 'center',\n  padding: 'md',\n})`\n  flex: 0 0 auto;\n  align-self: stretch;\n  background: ${neutrals.neutral30};\n  border-top-right-radius: ${border.radius};\n  border-bottom-right-radius: ${border.radius};\n  font-size: ${fontSizes.small};\n`\n\nexport default InputCounterSC\n","import styled from 'styled-components'\n\n// Component\nimport FlexBox from 'components/flex-box'\n\n// Constants\nimport {border, layout, neutrals} from 'constants/styles'\n\nconst SelectFauxSC = styled(FlexBox).attrs({\n  alignItems: 'center',\n  padding: '0 md',\n})`\n  min-height: ${layout.tapSize};\n  border-radius: ${border.radius};\n  border: 1px solid ${border.color};\n  background: ${neutrals.neutral10};\n\n  > div:first-child {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n`\n\nexport default SelectFauxSC\n","import styled from 'styled-components'\n\n// Constants\nimport {fontSizes, spacing} from 'constants/styles'\n\nconst FieldLabelSC = styled.label`\n  display: inline-block;\n  padding-left: ${spacing.md};\n  margin-bottom: ${spacing.sm};\n  font-size: ${fontSizes.small};\n`\n\nexport default FieldLabelSC\n","import styled from 'styled-components'\n\n// Component\nimport FlexItem from 'components/flex-item'\n\n// Constants\nimport {spacing} from 'constants/styles'\n\nconst FieldSC = styled(FlexItem)`\n  width: 100%;\n\n  & + & {\n    margin-left: ${spacing.lg};\n  }\n`\n\nexport default FieldSC\n"],"sourceRoot":""}