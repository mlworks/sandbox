{"version":3,"sources":["components/button-raised/button-raised.js","components/carousel/carousel-controls-sc.js","components/carousel/carousel-scroller-sc.js","components/carousel/carousel-controls.js","components/carousel/carousel-indicator-sc.js","components/carousel/carousel-inner-sc.js","components/carousel/carousel-pagination-sc.js","components/carousel/carousel-scroller.js","components/carousel/carousel.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/button-raised/index.js"],"names":["ButtonRaised","styled","ButtonBase","spacing","md","neutrals","neutral00","neutral20","neutral10","CarouselControlsSC","FlexBox","attrs","alignItems","justifyContent","padding","zIndex","z1","CarouselScrollerSC","props","style","transform","translateX","isDragActive","CarouselControls","activeItem","nextIndex","prevIndex","onNextItem","onPrevItem","flex","aria-controls","aria-label","disabled","onClick","icon","CarouselIndicatorSC","unit","neutral40","CarouselInnerSC","div","CarouselPaginationSC","ol","layout","subUnit","CarouselScroller","children","scrollerEl","useRef","refs","useState","setTranslateX","initialX","setInitialX","initialTranslateX","setInitialTranslateX","endX","setEndX","getEventX","event","test","type","touches","clientX","resetScrollPosition","current","offsetWidth","handleDragStart","handleDragMove","Math","round","handleDragEnd","delta","threshold","React","Children","count","abs","recalcSlidePosition","useEffect","window","addEventListener","removeEventListener","id","ref","onKeyDown","keyCode","onTouchStart","onTouchEnd","onTouchMove","onMouseDown","onMouseUp","onMouseMove","onMouseOut","onTransitionEnd","focus","map","child","index","createRef","cloneElement","role","tabIndex","onScrollToItem","getNextIndex","currentIndex","totalItems","getPrevIndex","Carousel","numOfItems","setActiveItem","onSetActiveItem","Array","_","aria-selected","_toConsumableArray","arr","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError"],"mappings":"0KAQMA,EAAeC,YAAOC,UAAPD,CAAH,gXAGLE,UAAQC,GAELC,WAASC,UAMPD,WAASE,UAITF,WAASG,UACdH,WAASE,WAIPP,a,mFCnBTS,EAAqBR,YAAOS,WAASC,MAAM,CAC/CC,WAAY,SACZC,eAAgB,gBAChBC,QAAS,MAHgBb,CAAH,uQASXc,SAAOC,GAKhBhB,WASWS,a,oEC3BTQ,EAAqBhB,YAAOS,WAASC,OAAM,SAAAO,GAAK,MAAK,CACzDC,MAAO,CACLC,UAAU,cAAD,OACPF,EAAMG,WAAN,WAA0C,EAApBH,EAAMG,WAA5B,MAAkD,IAD3C,SAFcpB,CAAH,gDAOR,SAAAiB,GAAK,OACjBA,EAAMI,aACF,OACA,uDAGOL,a,iCClBf,uDAmDeM,UAxCU,SAAC,GAAD,IACvBC,EADuB,EACvBA,WACAC,EAFuB,EAEvBA,UACAC,EAHuB,EAGvBA,UACAC,EAJuB,EAIvBA,WACAC,EALuB,EAKvBA,WALuB,OAOvB,eAAC,UAAD,WACE,cAAC,UAAD,CAAUC,KAAK,WAAf,SACE,cAAC,UAAD,CACEC,gBAAA,gBAAwBJ,GACxBK,aAAW,qBACXC,SAAUN,IAAcF,EACxBS,QAASL,EAJX,SAME,cAAC,UAAD,CAAcM,KAAK,qBAIvB,cAAC,UAAD,CAAUL,KAAK,WAAf,SACE,cAAC,UAAD,CACEC,gBAAA,gBAAwBL,GACxBM,aAAW,iBACXC,SAAUP,IAAcD,EACxBS,QAASN,EAJX,SAME,cAAC,UAAD,CAAcO,KAAK,2B,2EC7BrBC,EAAsBlC,YAAOC,UAAPD,CAAH,qOAEP,IAAPmC,OACQ,IAAPA,QACI,SAAAlB,GAAK,OACjBA,EAAM,iBAAmBb,WAASgC,UAAYhC,WAASE,aAM5C4B,a,qDCjBTG,E,KAAkBrC,EAAOsC,IAAV,wEAKND,a,mECFTE,EAAuBvC,IAAOwC,GAAV,6KAIVtC,UAAQC,GAIRsC,SAAOC,SAIRH,a,oFCyGAI,UApHU,SAAC,GAAoD,IAAnDpB,EAAkD,EAAlDA,WAAYqB,EAAsC,EAAtCA,SAAUlB,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,WACrDkB,EAAaC,iBAAO,MACpBC,EAAO,GAEb,EAAoCC,mBAAS,GAA7C,mBAAO5B,EAAP,KAAmB6B,EAAnB,KACA,EAAgCD,mBAAS,MAAzC,mBAAOE,EAAP,KAAiBC,EAAjB,KACA,EAAkDH,mBAAS,MAA3D,mBAAOI,EAAP,KAA0BC,EAA1B,KACA,EAAwBL,mBAAS,MAAjC,mBAAOM,EAAP,KAAaC,EAAb,KAcMC,EAAY,SAAAC,GAAK,MACrB,QAAQC,KAAKD,EAAME,MAAQF,EAAMG,QAAQ,GAAGC,QAAUJ,EAAMI,SAExDC,EAAsB,WAC1Bb,EAAc1B,EAAasB,EAAWkB,QAAQC,aAC9Cb,EAAY,MACZI,EAAQ,OAEJU,EAAkB,SAAAR,GACtBN,EAAYK,EAAUC,IACtBJ,EAAqBjC,IAEjB8C,EAAiB,SAAAT,GAGjBP,IACFD,EAAckB,KAAKC,MAAMhB,EAAoBF,EAAWM,EAAUC,KAClEF,EAAQC,EAAUC,MAGhBY,EAAgB,SAAAZ,GACpB,GAAKP,GAAaI,EAAlB,CAKA,IAAMgB,EAAQpB,EAAWI,EAEnBiB,EADgB1B,EAAWkB,QAAQC,YACP,EAG/BzC,EAAa,GAAKiD,IAAMC,SAASC,MAAM9B,IAAa0B,EAAQ,GAC7C,IAAf/C,GAAoB+C,EAAQ,GAC7BH,KAAKQ,IAAIL,IAAUC,EAEnBT,IACSQ,EAAQ,EACjB5C,IAEAC,IAGFwB,EAAY,MACZI,EAAQ,WArBNO,KAwBEc,EAAsB,kBAAMd,KASlC,OAPAe,qBAAU,WAER,OADAC,OAAOC,iBAAiB,SAAUH,GAC3B,WACLE,OAAOE,oBAAoB,SAAUJ,OAKvC,cAAC,UAAD,CACEK,GAAG,oBACH5D,eAAgB6B,EAChBgC,IAAKrC,EACLzB,WAAYA,EACZ+D,UAzEmB,SAAA1B,GAEC,KAAlBA,EAAM2B,SACR1D,IAIoB,KAAlB+B,EAAM2B,SACRzD,KAkEA0D,aAAcpB,EACdqB,WAAYjB,EACZkB,YAAarB,EACbsB,YAAavB,EACbwB,UAAWpB,EACXqB,YAAaxB,EACbyB,WAAY7B,EACZ8B,gBAAiB,kBAAM7C,EAAKxB,GAAYwC,QAAQ8B,SAblD,SAeGrB,IAAMC,SAASqB,IAAIlD,GAAU,SAACmD,EAAOC,GAEpC,OADAjD,EAAKiD,GAASxB,IAAMyB,YACbzB,IAAM0B,aAAaH,EAAO,CAC/B,cAAeC,IAAUzE,EACzB,kBAAkB,QAAlB,OAA2ByE,GAC3Bf,GAAG,SAAD,OAAWe,GACbG,KAAM,WACNC,SAAUJ,IAAUzE,EAAa,GAAK,EACtC2D,IAAKnC,EAAKiD,GACVK,eAAgB,kBACdpD,EAAc+C,EAAQnD,EAAWkB,QAAQC,uB,iIChG/CsC,EAAe,SAACC,EAAcC,GAAf,OACnBD,EAAe,IAAMC,EAAaD,EAAeA,EAAe,GAC5DE,EAAe,SAAAF,GAAY,OAAKA,GAAgB,EAAI,EAAIA,EAAe,GAmD9DG,UAjDE,SAAC,GAAgB,IAAf9D,EAAc,EAAdA,SACX+D,EAAanC,IAAMC,SAASC,MAAM9B,GACxC,EAAoCI,mBAAS,GAA7C,mBAAOzB,EAAP,KAAmBqF,EAAnB,KAEMC,EAAkB,SAAAb,GAAK,OAAIY,EAAcZ,IACzCtE,EAAa,kBAAMmF,EAAgBP,EAAa/E,EAAYoF,KAC5DhF,EAAa,kBAAMkF,EAAgBJ,EAAalF,KAEtD,OACE,gCACE,eAAC,UAAD,WACE,cAAC,UAAD,CACEA,WAAYA,EACZC,UAAW8E,EAAa/E,EAAYoF,GACpClF,UAAWgF,EAAalF,GACxBG,WAAYA,EACZC,WAAYA,IAEd,cAAC,UAAD,CACEJ,WAAYA,EACZG,WAAYA,EACZC,WAAYA,EAHd,SAKGiB,OAIL,cAAC,UAAD,UACG,YAAIkE,MAAMH,IAAab,KAAI,SAACiB,EAAGf,GAAJ,OAC1B,6BACE,cAAC,UAAD,CACEf,GAAE,eAAUe,GACZnE,gBAAA,gBAAwBmE,GACxBlE,aAAA,eAAoBkE,EAAQ,GAC5BgB,gBAAezF,IAAeyE,EAC9BG,KAAK,MACLnE,QAAS,kBAAM6E,EAAgBb,OAP1BA,a,2FCzCJ,SAASiB,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIJ,MAAMK,QAAQD,GAAM,OAAO,OAAAE,EAAA,GAAiBF,GDGzC,CAAkBA,IELZ,SAA0BG,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOP,MAAMW,KAAKJ,GFIvD,CAAgBH,IAAQ,OAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,wIHIwE,K,gCIL9F,oBACe5H,YAAf","file":"static/js/25.e2b1f004.chunk.js","sourcesContent":["import styled from 'styled-components'\n\n// SC\nimport ButtonBase from 'components/button-base'\n\n// Constants\nimport {neutrals, spacing} from 'constants/styles'\n\nconst ButtonRaised = styled(ButtonBase)`\n  display: flex;\n  justify-content: center;\n  padding: ${spacing.md};\n  border-radius: 50%;\n  background: ${neutrals.neutral00};\n  box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, 0.3);\n  transition: 0.2s ease-out all;\n\n  &:active:not([disabled]),\n  &:hover:not([disabled]) {\n    background: ${neutrals.neutral20};\n  }\n\n  &[disabled] {\n    background: ${neutrals.neutral10};\n    color: ${neutrals.neutral20};\n  }\n`\n\nexport default ButtonRaised\n","import styled from 'styled-components'\n\n// Component\nimport ButtonRaised from 'components/button-raised'\nimport FlexBox from 'components/flex-box'\n\n// Constants\nimport {zIndex} from 'constants/styles'\n\nconst CarouselControlsSC = styled(FlexBox).attrs({\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  padding: 'md',\n})`\n  position: absolute;\n  top: 50%;\n  right: 0;\n  left: 0;\n  z-index: ${zIndex.z1};\n\n  pointer-events: none;\n  transform: translateY(-50%);\n\n  ${ButtonRaised} {\n    pointer-events: auto;\n\n    &[disabled] {\n      transform: scale(0);\n    }\n  }\n`\n\nexport default CarouselControlsSC\n","import styled from 'styled-components'\n\n// Component\nimport FlexBox from 'components/flex-box'\n\nconst CarouselScrollerSC = styled(FlexBox).attrs(props => ({\n  style: {\n    transform: `translateX(${\n      props.translateX ? `${props.translateX * -1}px` : '0'\n    })`,\n  },\n}))`\n  transition: ${props =>\n    props.isDragActive\n      ? 'none'\n      : '0.3s cubic-bezier(0.25, 0.7, 0.01, 0.8) transform'};\n`\n\nexport default CarouselScrollerSC\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n// Component\nimport ButtonRaised from 'components/button-raised'\nimport FlexItem from 'components/flex-item'\nimport MaterialIcon from 'components/material-icon'\n\n// SC\nimport CarouselControlsSC from './carousel-controls-sc'\n\nconst CarouselControls = ({\n  activeItem,\n  nextIndex,\n  prevIndex,\n  onNextItem,\n  onPrevItem,\n}) => (\n  <CarouselControlsSC>\n    <FlexItem flex=\"0 0 auto\">\n      <ButtonRaised\n        aria-controls={`slide-${prevIndex}`}\n        aria-label=\"Show previous item\"\n        disabled={prevIndex === activeItem}\n        onClick={onPrevItem}\n      >\n        <MaterialIcon icon=\"chevron_left\" />\n      </ButtonRaised>\n    </FlexItem>\n\n    <FlexItem flex=\"0 0 auto\">\n      <ButtonRaised\n        aria-controls={`slide-${nextIndex}`}\n        aria-label=\"Show next item\"\n        disabled={nextIndex === activeItem}\n        onClick={onNextItem}\n      >\n        <MaterialIcon icon=\"chevron_right\" />\n      </ButtonRaised>\n    </FlexItem>\n  </CarouselControlsSC>\n)\n\nCarouselControls.propTypes = {\n  activeItem: PropTypes.number,\n  nextIndex: PropTypes.number,\n  prevIndex: PropTypes.number,\n  onNextItem: PropTypes.func,\n  onPrevItem: PropTypes.func,\n}\n\nexport default CarouselControls\n","import styled from 'styled-components'\n\n// Component\nimport ButtonBase from 'components/button-base'\n\n// Constants\nimport {neutrals, unit} from 'constants/styles'\n\nconst CarouselIndicatorSC = styled(ButtonBase)`\n  display: block;\n  width: ${unit * 1.5}px;\n  height: ${unit * 1.5}px;\n  background: ${props =>\n    props['aria-selected'] ? neutrals.neutral40 : neutrals.neutral20};\n  border-radius: 50%;\n  box-shadow: inset 0px 2px 2px -1px rgba(0, 0, 0, 0.3);\n  transition: 0.2s ease-out background-color;\n`\n\nexport default CarouselIndicatorSC\n","import styled from 'styled-components'\n\nconst CarouselInnerSC = styled.div`\n  position: relative;\n  overflow: hidden;\n`\n\nexport default CarouselInnerSC\n","import styled from 'styled-components'\n\n// Constants\nimport {layout, spacing} from 'constants/styles'\n\nconst CarouselPaginationSC = styled.ol`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: ${spacing.md};\n\n  li {\n    flex: 0 0 auto;\n    margin: 0 ${layout.subUnit};\n  }\n`\n\nexport default CarouselPaginationSC\n","import React, {useEffect, useRef, useState} from 'react'\nimport PropTypes from 'prop-types'\n\n// SC\nimport CarouselScrollerSC from './carousel-scroller-sc'\n\nconst CarouselScroller = ({activeItem, children, onNextItem, onPrevItem}) => {\n  const scrollerEl = useRef(null)\n  const refs = []\n\n  const [translateX, setTranslateX] = useState(0)\n  const [initialX, setInitialX] = useState(null)\n  const [initialTranslateX, setInitialTranslateX] = useState(null)\n  const [endX, setEndX] = useState(null)\n\n  const handleKeyPress = event => {\n    // Right Arrow (Advancing forward)\n    if (event.keyCode === 39) {\n      onNextItem()\n    }\n\n    // Left Arrow (Moving backwards)\n    if (event.keyCode === 37) {\n      onPrevItem()\n    }\n  }\n\n  const getEventX = event =>\n    /touch/.test(event.type) ? event.touches[0].clientX : event.clientX\n\n  const resetScrollPosition = () => {\n    setTranslateX(activeItem * scrollerEl.current.offsetWidth)\n    setInitialX(null)\n    setEndX(null)\n  }\n  const handleDragStart = event => {\n    setInitialX(getEventX(event))\n    setInitialTranslateX(translateX)\n  }\n  const handleDragMove = event => {\n    // Also handles the mouse interactions so it\n    // mimics mobile's experience. Click and drag\n    if (initialX) {\n      setTranslateX(Math.round(initialTranslateX + initialX - getEventX(event)))\n      setEndX(getEventX(event))\n    }\n  }\n  const handleDragEnd = event => {\n    if (!initialX || !endX) {\n      resetScrollPosition()\n      return\n    }\n\n    const delta = initialX - endX\n    const scrollerWidth = scrollerEl.current.offsetWidth\n    const threshold = scrollerWidth / 4\n\n    if (\n      (activeItem + 1 >= React.Children.count(children) && delta > 0) ||\n      (activeItem === 0 && delta < 0) ||\n      Math.abs(delta) <= threshold\n    ) {\n      resetScrollPosition()\n    } else if (delta > 0) {\n      onNextItem()\n    } else {\n      onPrevItem()\n    }\n\n    setInitialX(null)\n    setEndX(null)\n  }\n\n  const recalcSlidePosition = () => resetScrollPosition()\n\n  useEffect(() => {\n    window.addEventListener('resize', recalcSlidePosition)\n    return () => {\n      window.removeEventListener('resize', recalcSlidePosition)\n    }\n  })\n\n  return (\n    <CarouselScrollerSC\n      id=\"carousel-scroller\"\n      isDragActive={!!initialX}\n      ref={scrollerEl}\n      translateX={translateX}\n      onKeyDown={handleKeyPress}\n      onTouchStart={handleDragStart}\n      onTouchEnd={handleDragEnd}\n      onTouchMove={handleDragMove}\n      onMouseDown={handleDragStart}\n      onMouseUp={handleDragEnd}\n      onMouseMove={handleDragMove}\n      onMouseOut={resetScrollPosition}\n      onTransitionEnd={() => refs[activeItem].current.focus()}\n    >\n      {React.Children.map(children, (child, index) => {\n        refs[index] = React.createRef()\n        return React.cloneElement(child, {\n          'aria-hidden': index === activeItem ? false : true,\n          'aria-labelledby': `item-${index}`,\n          id: `slide-${index}`,\n          role: 'tabpanel',\n          tabIndex: index === activeItem ? 0 : -1,\n          ref: refs[index],\n          onScrollToItem: () =>\n            setTranslateX(index * scrollerEl.current.offsetWidth),\n        })\n      })}\n    </CarouselScrollerSC>\n  )\n}\n\nCarouselScroller.propTypes = {\n  activeItem: PropTypes.number,\n  children: PropTypes.node,\n  onNextItem: PropTypes.func,\n  onPrevItem: PropTypes.func,\n}\n\nexport default CarouselScroller\n","import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\n\n// Components\nimport CarouselControls from './carousel-controls'\nimport CarouselScroller from './carousel-scroller'\n\n// SC\nimport CarouselIndicatorSC from './carousel-indicator-sc'\nimport CarouselInnerSC from './carousel-inner-sc'\nimport CarouselPaginationSC from './carousel-pagination-sc'\n\nconst getNextIndex = (currentIndex, totalItems) =>\n  currentIndex + 1 === totalItems ? currentIndex : currentIndex + 1\nconst getPrevIndex = currentIndex => (currentIndex <= 1 ? 0 : currentIndex - 1)\n\nconst Carousel = ({children}) => {\n  const numOfItems = React.Children.count(children)\n  const [activeItem, setActiveItem] = useState(0)\n\n  const onSetActiveItem = index => setActiveItem(index)\n  const onNextItem = () => onSetActiveItem(getNextIndex(activeItem, numOfItems))\n  const onPrevItem = () => onSetActiveItem(getPrevIndex(activeItem))\n\n  return (\n    <div>\n      <CarouselInnerSC>\n        <CarouselControls\n          activeItem={activeItem}\n          nextIndex={getNextIndex(activeItem, numOfItems)}\n          prevIndex={getPrevIndex(activeItem)}\n          onNextItem={onNextItem}\n          onPrevItem={onPrevItem}\n        />\n        <CarouselScroller\n          activeItem={activeItem}\n          onNextItem={onNextItem}\n          onPrevItem={onPrevItem}\n        >\n          {children}\n        </CarouselScroller>\n      </CarouselInnerSC>\n\n      <CarouselPaginationSC>\n        {[...Array(numOfItems)].map((_, index) => (\n          <li key={index}>\n            <CarouselIndicatorSC\n              id={`item-${index}`}\n              aria-controls={`slide-${index}`}\n              aria-label={`Item ${index + 1}`}\n              aria-selected={activeItem === index}\n              role=\"tab\"\n              onClick={() => onSetActiveItem(index)}\n            />\n          </li>\n        ))}\n      </CarouselPaginationSC>\n    </div>\n  )\n}\n\nCarousel.propTypes = {\n  children: PropTypes.node,\n}\n\nexport default Carousel\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import ButtonRaised from './button-raised'\nexport default ButtonRaised\n"],"sourceRoot":""}