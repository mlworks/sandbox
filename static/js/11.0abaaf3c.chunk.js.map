{"version":3,"sources":["components/input/input-sc.js","components/input/input-wrapper-sc.js","components/input/input.js","components/input/index.js","components/input/input-counter-sc.js"],"names":["InputSC","styled","input","spacing","md","layout","tapSize","border","radius","color","neutrals","neutral10","focusColor","maxLength","InputWrapperSC","FlexBox","InputCounterSC","neutral00","Input","type","value","onChange","props","useState","length","count","setCount","charCountLeft","useEffect","aria-describedby","event","target","id","aria-label","title","defaultProps","attrs","alignItems","justifyContent","padding","neutral30","fontSizes","small"],"mappings":"2aAKA,IAAMA,EAAUC,IAAOC,MAAV,IAGAC,UAAQC,GACLC,SAAOC,QACJC,SAAOC,OACJD,SAAOE,MACbC,WAASC,UAKLJ,SAAOK,YAGvB,sBAAEC,WACF,+EAOWb,a,8OCjBf,IAAMc,EAAiBb,YAAOc,UAAPd,CAAH,IAEde,UACcT,SAAOK,WACZF,WAASO,WAKTH,a,6GCTTI,EAAQ,SAAC,GAAkD,IAAjDL,EAAgD,EAAhDA,UAAWM,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,SAAaC,EAAW,yDACpCC,mBAASV,EAAYO,EAAMI,QADS,mBACvDC,EADuD,KAChDC,EADgD,KAExDC,EAAgBd,EAAYY,EAMlC,OAJAG,qBAAU,WACRF,EAASN,EAAMI,UACd,CAACX,EAAWO,IAGb,kBAAC,UAAD,KACE,kBAAC,UAAD,KACE,kBAAC,UAAD,iBACME,EADN,CAEEO,mBAAkBhB,GAAa,aAC/BA,UAAWA,EACXO,MAAOA,EACPD,KAAMA,EACNE,SAAU,SAAAS,GACRJ,EAASI,EAAMC,OAAOX,MAAMI,QAC5BH,EAASS,QAIdjB,GACC,kBAAC,UAAD,CACEmB,GAAG,aACHC,aAAA,UAAeN,EAAf,yBACAO,MAAK,UAAKP,EAAL,0BAEJF,EALH,IAKWZ,KAcnBK,EAAMiB,aAAe,CACnBhB,KAAM,OACNC,MAAO,GACPC,SAAU,cAGGH,a,gCC5Df,oBACeA,YAAf,S,sSCOA,IAAMF,EAAiBf,YAAOc,WAASqB,MAAM,CAC3CC,WAAY,SACZC,eAAgB,SAChBC,QAAS,MAHYtC,CAAH,IAOJS,WAAS8B,UACIjC,SAAOC,OACJD,SAAOC,OACxBiC,YAAUC,OAGV1B","file":"static/js/11.0abaaf3c.chunk.js","sourcesContent":["import styled from 'styled-components'\n\n// Constants\nimport {border, layout, neutrals, spacing} from 'constants/styles'\n\nconst InputSC = styled.input`\n  display: block;\n  width: 100%;\n  padding: ${spacing.md};\n  min-height: ${layout.tapSize};\n  border-radius: ${border.radius};\n  border: 1px solid ${border.color};\n  background: ${neutrals.neutral10};\n\n  outline: 0;\n\n  &:focus {\n    border-color: ${border.focusColor};\n  }\n\n  ${({maxLength}) =>\n    !!maxLength &&\n    `\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n  `}\n`\n\nexport default InputSC\n","import styled from 'styled-components'\n\n// Component\nimport FlexBox from 'components/flex-box'\n\n// SC\nimport InputCounterSC from './input-counter-sc'\n\n// Constants\nimport {border, neutrals} from 'constants/styles'\n\nconst InputWrapperSC = styled(FlexBox)`\n  &:focus-within {\n    ${InputCounterSC} {\n      background: ${border.focusColor};\n      color: ${neutrals.neutral00};\n    }\n  }\n`\n\nexport default InputWrapperSC\n","import React, {useEffect, useState} from 'react'\nimport PropTypes from 'prop-types'\n\n// Components\nimport FlexItem from 'components/flex-item'\n\n// SC\nimport InputSC from './input-sc'\nimport InputCounterSC from './input-counter-sc'\nimport InputWrapperSC from './input-wrapper-sc'\n\nconst Input = ({maxLength, type, value, onChange, ...props}) => {\n  const [count, setCount] = useState(maxLength - value.length)\n  const charCountLeft = maxLength - count\n\n  useEffect(() => {\n    setCount(value.length)\n  }, [maxLength, value])\n\n  return (\n    <InputWrapperSC>\n      <FlexItem>\n        <InputSC\n          {...props}\n          aria-describedby={maxLength && 'char-limit'}\n          maxLength={maxLength}\n          value={value}\n          type={type}\n          onChange={event => {\n            setCount(event.target.value.length)\n            onChange(event)\n          }}\n        />\n      </FlexItem>\n      {maxLength && (\n        <InputCounterSC\n          id=\"char-limit\"\n          aria-label={`${charCountLeft} characters remaining`}\n          title={`${charCountLeft} characters remaining`}\n        >\n          {count}/{maxLength}\n        </InputCounterSC>\n      )}\n    </InputWrapperSC>\n  )\n}\n\nInput.propTypes = {\n  maxLength: PropTypes.number,\n  type: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onChange: PropTypes.func,\n}\n\nInput.defaultProps = {\n  type: 'text',\n  value: '',\n  onChange: () => {},\n}\n\nexport default Input\n","import Input from './input'\nexport default Input\n","import styled from 'styled-components'\n\n// Component\nimport FlexBox from 'components/flex-box'\n\n// Constants\nimport {border, fontSizes, neutrals} from 'constants/styles'\n\nconst InputCounterSC = styled(FlexBox).attrs({\n  alignItems: 'center',\n  justifyContent: 'center',\n  padding: 'md',\n})`\n  flex: 0 0 auto;\n  align-self: stretch;\n  background: ${neutrals.neutral30};\n  border-top-right-radius: ${border.radius};\n  border-bottom-right-radius: ${border.radius};\n  font-size: ${fontSizes.small};\n`\n\nexport default InputCounterSC\n"],"sourceRoot":""}