{"version":3,"sources":["components/button-raised/button-raised.js","components/stack-item/stack-item.js","components/carousel/carousel-controls-sc.js","components/carousel/carousel-scroller-sc.js","components/carousel/carousel-controls.js","components/carousel/carousel-indicator-sc.js","components/carousel/carousel-inner-sc.js","components/carousel/carousel-pagination-sc.js","components/carousel/carousel-scroller.js","components/carousel/carousel-item-sc.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/carousel/carousel.js","components/carousel/carousel-item.js","components/card/index.js","components/button-raised/index.js","components/stack-item/index.js","components/carousel/index.js","pages/carousel/index.js","components/card/card.js"],"names":["ButtonRaised","styled","ButtonBase","spacing","md","neutrals","neutral00","neutral20","neutral10","StackItem","div","xlg","CarouselControlsSC","FlexBox","attrs","alignItems","justifyContent","padding","zIndex","z1","CarouselScrollerSC","props","style","transform","translateX","isDragActive","CarouselControls","activeItem","nextIndex","prevIndex","onNextItem","onPrevItem","flex","aria-controls","aria-label","disabled","onClick","icon","CarouselIndicatorSC","unit","neutral40","CarouselInnerSC","CarouselPaginationSC","ol","layout","subUnit","CarouselScroller","children","scrollerEl","useRef","refs","useState","setTranslateX","initialX","setInitialX","initialTranslateX","setInitialTranslateX","endX","setEndX","getEventX","event","test","type","touches","clientX","resetScrollPosition","current","offsetWidth","handleDragStart","handleDragMove","Math","round","handleDragEnd","delta","threshold","React","Children","count","abs","recalcSlidePosition","useEffect","window","addEventListener","removeEventListener","id","ref","onKeyDown","keyCode","onTouchStart","onTouchEnd","onTouchMove","onMouseDown","onMouseUp","onMouseMove","onMouseOut","onTransitionEnd","focus","map","child","index","createRef","cloneElement","role","tabIndex","onScrollToItem","CarouselItemSC","FlexItem","_toConsumableArray","arr","Array","isArray","i","arr2","length","iter","Symbol","iterator","Object","prototype","toString","call","from","TypeError","getNextIndex","currentIndex","totalItems","getPrevIndex","Carousel","numOfItems","setActiveItem","onSetActiveItem","_","key","aria-selected","CarouselItem","forwardRef","prevCountRef","Card","CarouselPage","Fragment","src","process","alt","draggable","section","lg","border","radius"],"mappings":"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","file":"static/js/4.4bb41e47.chunk.js","sourcesContent":["import styled from 'styled-components'\n\n// SC\nimport ButtonBase from 'components/button-base'\n\n// Constants\nimport {neutrals, spacing} from 'constants/styles'\n\nconst ButtonRaised = styled(ButtonBase)`\n  display: flex;\n  justify-content: center;\n  padding: ${spacing.md};\n  border-radius: 50%;\n  background: ${neutrals.neutral00};\n  box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, 0.3);\n  transition: 0.2s ease-out all;\n\n  &:active:not([disabled]),\n  &:hover:not([disabled]) {\n    background: ${neutrals.neutral20};\n  }\n\n  &[disabled] {\n    background: ${neutrals.neutral10};\n    color: ${neutrals.neutral20};\n  }\n`\n\nexport default ButtonRaised\n","import styled from 'styled-components'\n\n// Constants\nimport {spacing} from 'constants/styles'\n\nconst StackItem = styled.div`\n  & + & {\n    margin-top: ${spacing.xlg};\n  }\n`\n\nexport default StackItem\n","import styled from 'styled-components'\n\n// Component\nimport ButtonRaised from 'components/button-raised'\nimport FlexBox from 'components/flex-box'\n\n// Constants\nimport {zIndex} from 'constants/styles'\n\nconst CarouselControlsSC = styled(FlexBox).attrs({\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  padding: 'md',\n})`\n  position: absolute;\n  top: 50%;\n  right: 0;\n  left: 0;\n  z-index: ${zIndex.z1};\n\n  pointer-events: none;\n  transform: translateY(-50%);\n\n  ${ButtonRaised} {\n    pointer-events: auto;\n\n    &[disabled] {\n      transform: scale(0);\n    }\n  }\n`\n\nexport default CarouselControlsSC\n","import styled from 'styled-components'\n\n// Component\nimport FlexBox from 'components/flex-box'\n\nconst CarouselScrollerSC = styled(FlexBox).attrs(props => ({\n  style: {\n    transform: `translateX(${\n      props.translateX ? `${props.translateX * -1}px` : '0'\n    })`,\n  },\n}))`\n  transition: ${props =>\n    props.isDragActive\n      ? 'none'\n      : '0.3s cubic-bezier(0.25, 0.7, 0.01, 0.8) transform'};\n`\n\nexport default CarouselScrollerSC\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n// Component\nimport ButtonRaised from 'components/button-raised'\nimport FlexItem from 'components/flex-item'\nimport MaterialIcon from 'components/material-icon'\n\n// SC\nimport CarouselControlsSC from './carousel-controls-sc'\n\nconst CarouselControls = ({\n  activeItem,\n  nextIndex,\n  prevIndex,\n  onNextItem,\n  onPrevItem,\n}) => (\n  <CarouselControlsSC>\n    <FlexItem flex=\"0 0 auto\">\n      <ButtonRaised\n        aria-controls={`slide-${prevIndex}`}\n        aria-label=\"Show previous item\"\n        disabled={prevIndex === activeItem}\n        onClick={onPrevItem}\n      >\n        <MaterialIcon icon=\"chevron_left\" />\n      </ButtonRaised>\n    </FlexItem>\n\n    <FlexItem flex=\"0 0 auto\">\n      <ButtonRaised\n        aria-controls={`slide-${nextIndex}`}\n        aria-label=\"Show next item\"\n        disabled={nextIndex === activeItem}\n        onClick={onNextItem}\n      >\n        <MaterialIcon icon=\"chevron_right\" />\n      </ButtonRaised>\n    </FlexItem>\n  </CarouselControlsSC>\n)\n\nCarouselControls.propTypes = {\n  activeItem: PropTypes.number,\n  nextIndex: PropTypes.number,\n  prevIndex: PropTypes.number,\n  onNextItem: PropTypes.func,\n  onPrevItem: PropTypes.func,\n}\n\nexport default CarouselControls\n","import styled from 'styled-components'\n\n// Component\nimport ButtonBase from 'components/button-base'\n\n// Constants\nimport {neutrals, unit} from 'constants/styles'\n\nconst CarouselIndicatorSC = styled(ButtonBase)`\n  display: block;\n  width: ${unit * 1.5}px;\n  height: ${unit * 1.5}px;\n  background: ${props =>\n    props['aria-selected'] ? neutrals.neutral40 : neutrals.neutral20};\n  border-radius: 50%;\n  box-shadow: inset 0px 2px 2px -1px rgba(0, 0, 0, 0.3);\n  transition: 0.2s ease-out background-color;\n`\n\nexport default CarouselIndicatorSC\n","import styled from 'styled-components'\n\nconst CarouselInnerSC = styled.div`\n  position: relative;\n  overflow: hidden;\n`\n\nexport default CarouselInnerSC\n","import styled from 'styled-components'\n\n// Constants\nimport {layout, spacing} from 'constants/styles'\n\nconst CarouselPaginationSC = styled.ol`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: ${spacing.md};\n\n  li {\n    flex: 0 0 auto;\n    margin: 0 ${layout.subUnit};\n  }\n`\n\nexport default CarouselPaginationSC\n","import React, {useEffect, useRef, useState} from 'react'\nimport PropTypes from 'prop-types'\n\n// SC\nimport CarouselScrollerSC from './carousel-scroller-sc'\n\nconst CarouselScroller = ({activeItem, children, onNextItem, onPrevItem}) => {\n  const scrollerEl = useRef(null)\n  const refs = []\n\n  const [translateX, setTranslateX] = useState(0)\n  const [initialX, setInitialX] = useState(null)\n  const [initialTranslateX, setInitialTranslateX] = useState(null)\n  const [endX, setEndX] = useState(null)\n\n  const handleKeyPress = event => {\n    // Right Arrow (Advancing forward)\n    if (event.keyCode === 39) {\n      onNextItem()\n    }\n\n    // Left Arrow (Moving backwards)\n    if (event.keyCode === 37) {\n      onPrevItem()\n    }\n  }\n\n  const getEventX = event =>\n    /touch/.test(event.type) ? event.touches[0].clientX : event.clientX\n\n  const resetScrollPosition = () => {\n    setTranslateX(activeItem * scrollerEl.current.offsetWidth)\n    setInitialX(null)\n    setEndX(null)\n  }\n  const handleDragStart = event => {\n    setInitialX(getEventX(event))\n    setInitialTranslateX(translateX)\n  }\n  const handleDragMove = event => {\n    // Also handles the mouse interactions so it\n    // mimics mobile's experience. Click and drag\n    if (initialX) {\n      setTranslateX(Math.round(initialTranslateX + initialX - getEventX(event)))\n      setEndX(getEventX(event))\n    }\n  }\n  const handleDragEnd = event => {\n    if (!initialX || !endX) {\n      resetScrollPosition()\n      return\n    }\n\n    const delta = initialX - endX\n    const scrollerWidth = scrollerEl.current.offsetWidth\n    const threshold = scrollerWidth / 4\n\n    if (\n      (activeItem + 1 >= React.Children.count(children) && delta > 0) ||\n      (activeItem === 0 && delta < 0) ||\n      Math.abs(delta) <= threshold\n    ) {\n      resetScrollPosition()\n    } else if (delta > 0) {\n      onNextItem()\n    } else {\n      onPrevItem()\n    }\n\n    setInitialX(null)\n    setEndX(null)\n  }\n\n  const recalcSlidePosition = () => resetScrollPosition()\n\n  useEffect(() => {\n    window.addEventListener('resize', recalcSlidePosition)\n    return () => {\n      window.removeEventListener('resize', recalcSlidePosition)\n    }\n  })\n\n  return (\n    <CarouselScrollerSC\n      id=\"carousel-scroller\"\n      isDragActive={!!initialX}\n      ref={scrollerEl}\n      translateX={translateX}\n      onKeyDown={handleKeyPress}\n      onTouchStart={handleDragStart}\n      onTouchEnd={handleDragEnd}\n      onTouchMove={handleDragMove}\n      onMouseDown={handleDragStart}\n      onMouseUp={handleDragEnd}\n      onMouseMove={handleDragMove}\n      onMouseOut={resetScrollPosition}\n      onTransitionEnd={() => refs[activeItem].current.focus()}\n    >\n      {React.Children.map(children, (child, index) => {\n        refs[index] = React.createRef()\n        return React.cloneElement(child, {\n          'aria-hidden': index === activeItem ? false : true,\n          'aria-labelledby': `item-${index}`,\n          id: `slide-${index}`,\n          role: 'tabpanel',\n          tabIndex: index === activeItem ? 0 : -1,\n          ref: refs[index],\n          onScrollToItem: () =>\n            setTranslateX(index * scrollerEl.current.offsetWidth),\n        })\n      })}\n    </CarouselScrollerSC>\n  )\n}\n\nCarouselScroller.propTypes = {\n  activeItem: PropTypes.number,\n  children: PropTypes.node,\n  onNextItem: PropTypes.func,\n  onPrevItem: PropTypes.func,\n}\n\nexport default CarouselScroller\n","import styled from 'styled-components'\n\nimport FlexItem from 'components/flex-item'\n\nconst CarouselItemSC = styled(FlexItem).attrs({\n  flex: '0 0 auto',\n})`\n  width: 100%;\n`\n\nexport default CarouselItemSC\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\n\n// Components\nimport CarouselControls from './carousel-controls'\nimport CarouselScroller from './carousel-scroller'\n\n// SC\nimport CarouselIndicatorSC from './carousel-indicator-sc'\nimport CarouselInnerSC from './carousel-inner-sc'\nimport CarouselPaginationSC from './carousel-pagination-sc'\n\nconst getNextIndex = (currentIndex, totalItems) =>\n  currentIndex + 1 === totalItems ? currentIndex : currentIndex + 1\nconst getPrevIndex = currentIndex => (currentIndex <= 1 ? 0 : currentIndex - 1)\n\nconst Carousel = ({children}) => {\n  const numOfItems = React.Children.count(children)\n  const [activeItem, setActiveItem] = useState(0)\n\n  const onSetActiveItem = index => setActiveItem(index)\n  const onNextItem = () => onSetActiveItem(getNextIndex(activeItem, numOfItems))\n  const onPrevItem = () => onSetActiveItem(getPrevIndex(activeItem))\n\n  return (\n    <div>\n      <CarouselInnerSC>\n        <CarouselControls\n          activeItem={activeItem}\n          nextIndex={getNextIndex(activeItem, numOfItems)}\n          prevIndex={getPrevIndex(activeItem)}\n          onNextItem={onNextItem}\n          onPrevItem={onPrevItem}\n        />\n        <CarouselScroller\n          activeItem={activeItem}\n          onNextItem={onNextItem}\n          onPrevItem={onPrevItem}\n        >\n          {children}\n        </CarouselScroller>\n      </CarouselInnerSC>\n\n      <CarouselPaginationSC>\n        {[...Array(numOfItems)].map((_, index) => (\n          <li key={index}>\n            <CarouselIndicatorSC\n              id={`item-${index}`}\n              aria-controls={`slide-${index}`}\n              aria-label={`Item ${index + 1}`}\n              aria-selected={activeItem === index}\n              role=\"tab\"\n              onClick={() => onSetActiveItem(index)}\n            />\n          </li>\n        ))}\n      </CarouselPaginationSC>\n    </div>\n  )\n}\n\nCarousel.propTypes = {\n  children: PropTypes.node,\n}\n\nexport default Carousel\n","import React, {useEffect, useRef} from 'react'\nimport PropTypes from 'prop-types'\n\n// SC\nimport CarouselItemSC from './carousel-item-sc'\n\nconst CarouselItem = React.forwardRef(\n  ({children, onScrollToItem, ...props}, ref) => {\n    const prevCountRef = useRef(0)\n    useEffect(() => {\n      if (prevCountRef.current === -1 && props.tabIndex === 0) {\n        onScrollToItem()\n      }\n      prevCountRef.current = props.tabIndex\n    })\n\n    return (\n      <CarouselItemSC {...props} ref={ref}>\n        {children}\n      </CarouselItemSC>\n    )\n  }\n)\n\nCarouselItem.propTypes = {\n  children: PropTypes.node,\n  onScrollToItem: PropTypes.func,\n}\n\nexport default CarouselItem\n","import Card from './card'\nexport default Card\n","import ButtonRaised from './button-raised'\nexport default ButtonRaised\n","import StackItem from './stack-item'\nexport default StackItem\n","import Carousel from './carousel'\nexport default Carousel\n","import React from 'react'\n\n// Components\nimport Card from 'components/card'\nimport Carousel from 'components/carousel'\nimport CarouselItem from 'components/carousel/carousel-item'\nimport StackItem from 'components/stack-item'\n\nconst CarouselPage = () => (\n  <React.Fragment>\n    <StackItem>\n      <Card>\n        <h2>Carousel Example</h2>\n        <p>\n          Keyboard accessible carousel component. Once tabbed to a carousel\n          item, pressing left or right arrow keys will automatically cycle\n          through the carousel.\n        </p>\n      </Card>\n    </StackItem>\n    <StackItem>\n      <Card>\n        <Carousel>\n          <CarouselItem>\n            <img\n              src={`${process.env.PUBLIC_URL}/shiba-1.jpg`}\n              alt=\"Shiba Inu\"\n              draggable=\"false\"\n            />\n          </CarouselItem>\n          <CarouselItem>\n            <img\n              src={`${process.env.PUBLIC_URL}/shiba-2.jpg`}\n              alt=\"Shiba Inu\"\n              draggable=\"false\"\n            />\n          </CarouselItem>\n          <CarouselItem>\n            <img\n              src={`${process.env.PUBLIC_URL}/shiba-3.jpg`}\n              alt=\"Shiba Inu\"\n              draggable=\"false\"\n            />\n          </CarouselItem>\n        </Carousel>\n      </Card>\n    </StackItem>\n  </React.Fragment>\n)\n\nexport default CarouselPage\n","import styled from 'styled-components'\n\n// Constants\nimport {border, neutrals, spacing} from 'constants/styles'\n\nconst Card = styled.section`\n  overflow: hidden;\n  padding: ${spacing.xlg} ${spacing.lg};\n  border-radius: ${border.radius};\n  background: ${neutrals.neutral00};\n  box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, 0.3);\n\n  h2 {\n    margin-bottom: ${spacing.xlg};\n    font-family: 'Roboto', sans-serif;\n    text-transform: none;\n  }\n`\n\nexport default Card\n"],"sourceRoot":""}