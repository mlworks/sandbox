{"version":3,"sources":["components/field/field-label-sc.js","components/field/field-sc.js","components/select/select-sc.js","components/select/select-wrapper-sc.js","components/field/field.js","components/field-row/field-row.js","components/input/input-sc.js","components/input/input-wrapper-sc.js","components/select/select.js","components/button-primary/button-primary.js","components/input/input.js","components/stack-item/stack-item.js","components/form-example/form-example.js","components/card/index.js","components/field/index.js","components/field-row/index.js","components/select/index.js","components/button-primary/index.js","components/input/index.js","components/stack-item/index.js","components/form-example/index.js","pages/modal/index.js","components/select/select-faux-sc.js","components/input/input-counter-sc.js","components/card/card.js","components/field/field-caption-sc.js"],"names":["FieldLabelSC","styled","label","spacing","md","sm","fontSizes","small","FieldSC","FlexItem","lg","SelectSC","select","SelectFauxSC","border","focusColor","SelectWrapperSC","div","Field","caption","children","flex","id","htmlFor","FieldRow","FlexBox","InputSC","input","layout","tapSize","radius","color","neutrals","neutral10","maxLength","InputWrapperSC","InputCounterSC","neutral00","Select","placeholder","options","value","onChange","props","useState","selectedValue","setValue","selectedOption","find","option","useEffect","event","target","disabled","map","icon","defaultProps","ButtonPrimary","Button","colors","accentRed","darkAccentRed","Input","type","length","count","setCount","charCountLeft","aria-describedby","aria-label","title","StackItem","xlg","useInput","initialValue","reset","bind","FormExample","firstName","bindFirstName","resetFirstName","lastName","bindLastName","resetLastName","address","bindAddress","resetAddress","country","bindCountry","resetCountry","onSubmit","preventDefault","console","log","marginTop","Card","ModalExample","isOpen","toggleModal","effect","setModalEffect","coverage","setModalCoverage","Fragment","min","max","step","valueAsNumber","onClick","onDismiss","padding","margin","attrs","alignItems","justifyContent","neutral30","section","FieldCaptionSC"],"mappings":"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","file":"static/js/2.dffb9e7c.chunk.js","sourcesContent":["import styled from 'styled-components'\n\n// Constants\nimport {fontSizes, spacing} from 'constants/styles'\n\nconst FieldLabelSC = styled.label`\n  display: block;\n  padding: 0 ${spacing.md};\n  margin-bottom: ${spacing.sm};\n  font-size: ${fontSizes.small};\n`\n\nexport default FieldLabelSC\n","import styled from 'styled-components'\n\n// Component\nimport FlexItem from 'components/flex-item'\n\n// Constants\nimport {spacing} from 'constants/styles'\n\nconst FieldSC = styled(FlexItem)`\n  width: 100%;\n\n  & + & {\n    margin-left: ${spacing.lg};\n  }\n`\n\nexport default FieldSC\n","import styled from 'styled-components'\n\n// SC\nimport SelectFauxSC from './select-faux-sc'\n\n// Constants\nimport {border} from 'constants/styles'\n\nconst SelectSC = styled.select`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  display: block;\n  width: 100%;\n  opacity: 0;\n  appearance: none;\n\n  &:active + ${SelectFauxSC}, &:focus + ${SelectFauxSC} {\n    border-color: ${border.focusColor};\n  }\n`\n\nexport default SelectSC\n","import styled from 'styled-components'\n\nconst SelectWrapperSC = styled.div`\n  position: relative;\n`\n\nexport default SelectWrapperSC\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n// SC\nimport FieldSC from './field-sc'\nimport FieldCaptionSC from './field-caption-sc'\nimport FieldLabelSC from './field-label-sc'\n\nconst Field = ({caption, children, flex, id, label}) => (\n  <FieldSC flex={flex}>\n    <FieldLabelSC htmlFor={id}>{label}</FieldLabelSC>\n    {children}\n    {caption && <FieldCaptionSC>{caption}</FieldCaptionSC>}\n  </FieldSC>\n)\n\nField.propTypes = {\n  caption: PropTypes.node,\n  children: PropTypes.node,\n  flex: PropTypes.string,\n  id: PropTypes.string,\n  label: PropTypes.node,\n}\n\nexport default Field\n","import styled from 'styled-components'\n\n// Component\nimport FlexBox from 'components/flex-box'\n\n// Constants\nimport {spacing} from 'constants/styles'\n\nconst FieldRow = styled(FlexBox)`\n  & + & {\n    margin-top: ${spacing.lg};\n  }\n`\n\nexport default FieldRow\n\n","import styled from 'styled-components'\n\n// Constants\nimport {border, layout, neutrals, spacing} from 'constants/styles'\n\nconst InputSC = styled.input`\n  display: block;\n  width: 100%;\n  padding: ${spacing.md};\n  min-height: ${layout.tapSize};\n  border-radius: ${border.radius};\n  border: 1px solid ${border.color};\n  background: ${neutrals.neutral10};\n\n  outline: 0;\n\n  &:focus {\n    border-color: ${border.focusColor};\n  }\n\n  ${({maxLength}) =>\n    !!maxLength &&\n    `\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n  `}\n\n  &[type=\"range\"] {\n    padding: 0;\n    min-height: initial;\n  }\n`\n\nexport default InputSC\n","import styled from 'styled-components'\n\n// Component\nimport FlexBox from 'components/flex-box'\n\n// SC\nimport InputCounterSC from './input-counter-sc'\n\n// Constants\nimport {border, neutrals} from 'constants/styles'\n\nconst InputWrapperSC = styled(FlexBox)`\n  &:focus-within {\n    ${InputCounterSC} {\n      background: ${border.focusColor};\n      color: ${neutrals.neutral00};\n    }\n  }\n`\n\nexport default InputWrapperSC\n","import React, {useEffect, useState} from 'react'\nimport PropTypes from 'prop-types'\n\n// Components\nimport FlexItem from 'components/flex-item'\nimport MaterialIcon from 'components/material-icon'\n\n// SC\nimport SelectSC from './select-sc'\nimport SelectFauxSC from './select-faux-sc'\nimport SelectWrapperSC from './select-wrapper-sc'\n\nconst Select = ({placeholder, options, value, onChange, ...props}) => {\n  const [selectedValue, setValue] = useState(value)\n  const selectedOption =\n    options.find(option => option.value === selectedValue) || {}\n\n  useEffect(() => {\n    setValue(value)\n  }, [value])\n\n  return (\n    <SelectWrapperSC>\n      <SelectSC\n        {...props}\n        value={selectedValue}\n        onChange={event => {\n          setValue(event.target.value)\n          onChange(event)\n        }}\n      >\n        {placeholder && (\n          <option value=\"\" disabled>\n            {placeholder}\n          </option>\n        )}\n        {options.map(option => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </SelectSC>\n      <SelectFauxSC>\n        <FlexItem>{selectedOption.label || placeholder}</FlexItem>\n        <FlexItem flex=\"0 0 auto\">\n          <MaterialIcon icon=\"arrow_down\" />\n        </FlexItem>\n      </SelectFauxSC>\n    </SelectWrapperSC>\n  )\n}\n\nSelect.propTypes = {\n  options: PropTypes.array,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n}\n\nSelect.defaultProps = {\n  placeholder: 'Select an option',\n  value: '',\n  onChange: () => {},\n}\n\nexport default Select\n","import styled from 'styled-components'\n\n// SC\nimport Button from 'components/button'\n\n// Constants\nimport {border, colors, neutrals} from 'constants/styles'\n\nconst ButtonPrimary = styled(Button)`\n  background: ${colors.accentRed};\n  border-radius: ${border.radius};\n  color: ${neutrals.neutral00};\n\n  &:active:not([disabled]),\n  &:hover:not([disabled]) {\n    background: ${colors.darkAccentRed};\n  }\n\n  &[disabled] {\n    background: #bd9595;\n    colors: #dadada;\n  }\n`\n\nexport default ButtonPrimary\n","import React, {useEffect, useState} from 'react'\nimport PropTypes from 'prop-types'\n\n// Components\nimport FlexItem from 'components/flex-item'\n\n// SC\nimport InputSC from './input-sc'\nimport InputCounterSC from './input-counter-sc'\nimport InputWrapperSC from './input-wrapper-sc'\n\nconst Input = ({maxLength, type, value, onChange, ...props}) => {\n  const [count, setCount] = useState(maxLength - value.length)\n  const charCountLeft = maxLength - count\n\n  useEffect(() => {\n    setCount(value.length)\n  }, [maxLength, value])\n\n  return (\n    <InputWrapperSC>\n      <FlexItem>\n        <InputSC\n          {...props}\n          aria-describedby={maxLength && 'char-limit'}\n          maxLength={maxLength}\n          value={value}\n          type={type}\n          onChange={event => {\n            setCount(event.target.value.length)\n            onChange(event)\n          }}\n        />\n      </FlexItem>\n      {maxLength && (\n        <InputCounterSC\n          id=\"char-limit\"\n          aria-label={`${charCountLeft} characters remaining`}\n          title={`${charCountLeft} characters remaining`}\n        >\n          {count}/{maxLength}\n        </InputCounterSC>\n      )}\n    </InputWrapperSC>\n  )\n}\n\nInput.propTypes = {\n  maxLength: PropTypes.number,\n  type: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onChange: PropTypes.func,\n}\n\nInput.defaultProps = {\n  type: 'text',\n  value: '',\n  onChange: () => {},\n}\n\nexport default Input\n","import styled from 'styled-components'\n\n// Constants\nimport {spacing} from 'constants/styles'\n\nconst StackItem = styled.div`\n  & + & {\n    margin-top: ${spacing.xlg};\n  }\n`\n\nexport default StackItem\n","import React, {useState} from 'react'\n\n// Components\nimport ButtonPrimary from 'components/button-primary'\nimport Field from 'components/field'\nimport FieldRow from 'components/field-row'\nimport Input from 'components/input'\nimport Select from 'components/select'\nimport Spacing from 'components/spacing'\n\n// https://rangle.io/blog/simplifying-controlled-inputs-with-hooks/\nconst useInput = initialValue => {\n  const [value, setValue] = useState(initialValue)\n\n  return {\n    value,\n    setValue,\n    reset: () => setValue(''),\n    bind: {\n      value,\n      onChange: event => {\n        setValue(event.target.value)\n      },\n    },\n  }\n}\n\nconst FormExample = () => {\n  const {\n    value: firstName,\n    bind: bindFirstName,\n    reset: resetFirstName,\n  } = useInput('')\n  const {value: lastName, bind: bindLastName, reset: resetLastName} = useInput(\n    ''\n  )\n  const {value: address, bind: bindAddress, reset: resetAddress} = useInput('')\n  const {value: country, bind: bindCountry, reset: resetCountry} = useInput('')\n\n  return (\n    <form\n      onSubmit={event => {\n        event.preventDefault()\n        console.log({\n          address,\n          firstName,\n          lastName,\n          country,\n        })\n        resetFirstName()\n        resetLastName()\n        resetAddress()\n        resetCountry()\n      }}\n    >\n      <FieldRow>\n        <Field label=\"First Name\" id=\"firstName\">\n          <Input id=\"firstName\" maxLength={25} {...bindFirstName} />\n        </Field>\n        <Field label=\"Last Name\" id=\"lastName\">\n          <Input id=\"lastName\" maxLength={25} {...bindLastName} />\n        </Field>\n      </FieldRow>\n\n      <FieldRow>\n        <Field label=\"Address\" id=\"address\">\n          <Input\n            id=\"address\"\n            placeholder=\"E.g. 123 Fake Street\"\n            {...bindAddress}\n          />\n        </Field>\n        <Field label=\"Country\" id=\"country\" flex=\"0 0 30%\">\n          <Select\n            id=\"country\"\n            options={[\n              {\n                label: 'Canada',\n                value: 'ca',\n              },\n              {\n                label: 'United States',\n                value: 'us',\n              },\n            ]}\n            {...bindCountry}\n          />\n        </Field>\n      </FieldRow>\n\n      <Spacing marginTop=\"lg\">\n        <ButtonPrimary\n          disabled={\n            !address.length ||\n            !firstName.length ||\n            !lastName.length ||\n            !country.length\n          }\n          type=\"submit\"\n        >\n          Submit\n        </ButtonPrimary>\n      </Spacing>\n    </form>\n  )\n}\n\nexport default FormExample\n","import Card from './card'\nexport default Card\n","import Field from './field'\nexport default Field\n","import FieldRow from './field-row'\nexport default FieldRow\n","import Select from './select'\nexport default Select\n","import ButtonPrimary from './button-primary'\nexport default ButtonPrimary\n","import Input from './input'\nexport default Input\n","import StackItem from './stack-item'\nexport default StackItem\n","import FormExample from './form-example'\nexport default FormExample\n","import React, {useState} from 'react'\n\n// Components\nimport ButtonPrimary from 'components/button-primary'\nimport Card from 'components/card'\nimport Field from 'components/field'\nimport FieldRow from 'components/field-row'\nimport FormExample from 'components/form-example'\nimport Input from 'components/input'\nimport Modal from 'components/modal'\nimport Select from 'components/select'\nimport Spacing from 'components/spacing'\nimport StackItem from 'components/stack-item'\n\nconst ModalExample = () => {\n  const [isOpen, toggleModal] = useState(false)\n  const [effect, setModalEffect] = useState('dialog')\n  const [coverage, setModalCoverage] = useState(80)\n\n  return (\n    <React.Fragment>\n      <StackItem>\n        <Card>\n          <h2>Modal Example</h2>\n          <p>\n            Play around with the controls below to see how the modal animates.\n          </p>\n          <p>\n            Once modal is opened, try tabbing / shift+tabbing. Focus should be\n            trapped inside the modal until the modal is closed. If you press\n            'ESC' key, it will dismiss the modal.\n          </p>\n        </Card>\n      </StackItem>\n      <StackItem>\n        <Card>\n          <FieldRow>\n            <Field id=\"coverage\" label={`Modal Coverage: ${coverage}%`}>\n              <Input\n                id=\"coverage\"\n                type=\"range\"\n                min=\"50\"\n                max=\"100\"\n                step=\"5\"\n                value={coverage}\n                onChange={event => setModalCoverage(event.target.valueAsNumber)}\n              />\n            </Field>\n\n            <Field id=\"effect\" label=\"Modal Animation Style\">\n              <Select\n                id=\"effect\"\n                options={[\n                  {\n                    value: 'dialog',\n                    label: 'Dialog',\n                  },\n                  {\n                    value: 'slide-top',\n                    label: 'Slide From Top',\n                  },\n                  {\n                    value: 'slide-left',\n                    label: 'Slide From Left',\n                  },\n                  {\n                    value: 'slide-right',\n                    label: 'Slide From Right',\n                  },\n                  {\n                    value: 'slide-bottom',\n                    label: 'Slide From Bottom',\n                  },\n                ]}\n                value={effect}\n                onChange={event => setModalEffect(event.target.value)}\n              />\n            </Field>\n          </FieldRow>\n          <Spacing marginTop=\"xlg\">\n            <ButtonPrimary onClick={() => toggleModal(true)}>\n              Open Modal\n            </ButtonPrimary>\n          </Spacing>\n        </Card>\n      </StackItem>\n\n      <Modal\n        coverage={coverage}\n        isOpen={isOpen}\n        effect={effect}\n        title=\"Modal example\"\n        onDismiss={() => toggleModal(false)}\n      >\n        <Spacing padding=\"lg\">\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce\n            egestas condimentum aliquam. Donec nec libero magna. Nullam\n            malesuada rhoncus purus vitae sagittis. Etiam bibendum venenatis\n            nisi quis congue. Aenean porta, nulla et varius elementum, tortor\n            tortor sagittis odio, id tincidunt lacus risus quis diam. Nunc id\n            facilisis leo, at rhoncus nisl. Aenean tincidunt, sem vel commodo\n            dapibus, lectus felis venenatis magna, quis mollis tellus dolor non\n            augue. Morbi eget neque auctor diam luctus ullamcorper. Integer\n            lacus risus, ullamcorper faucibus elementum et, accumsan eu turpis.\n            Duis cursus ipsum sed tempor lobortis.\n          </p>\n\n          <Spacing margin=\"lg 0\">\n            <FormExample />\n          </Spacing>\n\n          <p>\n            Donec tristique nulla a sem condimentum, id tincidunt nulla egestas.\n            Pellentesque habitant morbi tristique senectus et netus et malesuada\n            fames ac turpis egestas. Integer sollicitudin elementum dui, vitae\n            efficitur nunc eleifend eget. Fusce sit amet ex ut nisl pulvinar\n            feugiat. Aliquam in odio a lectus tincidunt aliquet. In tincidunt\n            non ante non sollicitudin. In vitae purus nulla. In commodo arcu\n            elit, nec semper orci sodales eget. Nunc nec velit rhoncus, gravida\n            dolor eget, aliquet lorem. Nulla eget ultrices augue. Pellentesque\n            ornare erat eu tristique ornare. Donec vitae vulputate orci, nec\n            pulvinar dolor. Sed a efficitur lacus.\n          </p>\n\n          <p>\n            Sed posuere laoreet sem, id ultrices urna dignissim ut. Sed sit amet\n            convallis ligula. Pellentesque aliquet felis quam, vitae volutpat\n            enim accumsan et. Suspendisse nec libero et nisl imperdiet porta.\n            Suspendisse fermentum velit ut egestas iaculis. Donec dignissim\n            blandit lorem a semper. Suspendisse tellus nunc, accumsan a mauris\n            at, ullamcorper lobortis quam. Aenean hendrerit tempor ligula, ac\n            eleifend tellus laoreet ut. Nunc a nisi sed urna viverra accumsan.\n            Aliquam sem nisl, aliquet ut massa vel, hendrerit facilisis eros.\n            Suspendisse vitae convallis eros. Mauris quis vulputate nisi. Aenean\n            luctus, nisi at feugiat sollicitudin, leo est tincidunt massa, quis\n            vehicula massa elit vel libero. Ut efficitur augue vel orci molestie\n            convallis.\n          </p>\n\n          <Spacing marginTop=\"lg\">\n            <ButtonPrimary onClick={() => toggleModal(false)}>\n              Close Modal\n            </ButtonPrimary>\n          </Spacing>\n        </Spacing>\n      </Modal>\n    </React.Fragment>\n  )\n}\n\nexport default ModalExample\n","import styled from 'styled-components'\n\n// Component\nimport FlexBox from 'components/flex-box'\n\n// Constants\nimport {border, layout, neutrals} from 'constants/styles'\n\nconst SelectFauxSC = styled(FlexBox).attrs({\n  alignItems: 'center',\n  padding: '0 md',\n})`\n  min-height: ${layout.tapSize};\n  border-radius: ${border.radius};\n  border: 1px solid ${border.color};\n  background: ${neutrals.neutral10};\n\n  > div:first-child {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n`\n\nexport default SelectFauxSC\n","import styled from 'styled-components'\n\n// Component\nimport FlexBox from 'components/flex-box'\n\n// Constants\nimport {border, fontSizes, neutrals} from 'constants/styles'\n\nconst InputCounterSC = styled(FlexBox).attrs({\n  alignItems: 'center',\n  justifyContent: 'center',\n  padding: 'md',\n})`\n  flex: 0 0 auto;\n  align-self: stretch;\n  background: ${neutrals.neutral30};\n  border-top-right-radius: ${border.radius};\n  border-bottom-right-radius: ${border.radius};\n  font-size: ${fontSizes.small};\n`\n\nexport default InputCounterSC\n","import styled from 'styled-components'\n\n// Constants\nimport {border, neutrals, spacing} from 'constants/styles'\n\nconst Card = styled.section`\n  overflow: hidden;\n  padding: ${spacing.xlg} ${spacing.lg};\n  border-radius: ${border.radius};\n  background: ${neutrals.neutral00};\n  box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, 0.3);\n\n  h2 {\n    margin-bottom: ${spacing.xlg};\n    font-family: 'Roboto', sans-serif;\n    text-transform: none;\n  }\n`\n\nexport default Card\n","import styled from 'styled-components'\n\n// Constants\nimport {fontSizes, spacing} from 'constants/styles'\n\nconst FieldCaptionSC = styled.div`\n  margin-top: ${spacing.sm};\n  padding: 0 ${spacing.md};\n  font-size: ${fontSizes.small};\n`\n\nexport default FieldCaptionSC\n"],"sourceRoot":""}