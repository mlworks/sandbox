{"version":3,"sources":["components/stack-item/stack-item.js","components/progress-bar/progress-bar-loader-sc.js","components/progress-bar/progress-bar-loader-bar-sc.js","components/progress-bar/progress-bar-pulse-sc.js","components/progress-bar/progress-bar-wrapper-sc.js","components/progress-bar/progress-bar.js","components/card/index.js","components/stack-item/index.js","components/progress-bar/index.js","pages/progress-bar/index.js","components/card/card.js"],"names":["StackItem","styled","div","spacing","xlg","ProgressBarLoaderSC","Spacing","unit","ProgressBarLoaderBarSC","attrs","props","style","transform","currentValue","neutrals","neutral10","pulse","keyframes","fade","ProgressBarPulseSC","ProgressBarWrapperSC","ProgressBar","role","aria-valuenow","aria-valuemin","aria-valuemax","marginBottom","Card","ProgressBarPage","useState","setCurrentValue","update","value","num","Math","max","min","random","round","getProgressValue","useEffect","setTimeout","timer","Fragment","background","section","lg","border","radius","neutral00"],"mappings":"oKAKMA,EAAYC,IAAOC,IAAV,iEAEGC,UAAQC,KAIXJ,a,2ECHTK,EAAsBJ,YAAOK,UAAPL,CAAH,sJACN,IAAPM,QAMGF,a,mECVTG,EAAyBP,IAAOC,IAAIO,OAAM,SAAAC,GAAK,MAAK,CACxDC,MAAO,CACLC,UAAU,UAAD,OAAYF,EAAMG,aAAe,KAAO,EAAxC,SAFkBZ,CAAH,qNAQZa,WAASC,WAOVP,a,gEClBTQ,EAAQC,YAAH,yIAULC,EAAOD,YAAH,8JAkBJE,EAAqBlB,IAAOC,IAAV,kcASTc,EAWEE,GAIFC,a,qDCpDTC,E,KAAuBnB,EAAOC,IAAV,mEAKXkB,a,iCCPf,2DAwBeC,UAhBK,SAAC,GAAD,IAAER,EAAF,EAAEA,aAAF,OAClB,eAAC,UAAD,CACES,KAAK,cACLC,gBAAeV,EACfW,gBAAc,IACdC,gBAAc,MAJhB,UAME,cAAC,UAAD,CAAqBC,aAAa,KAAKJ,KAAK,eAA5C,SACE,cAAC,UAAD,CAAwBT,aAAcA,EAAtC,SACE,cAAC,UAAD,QARN,UAYMA,EAZN,U,gCCTF,mBACec,YAAf,S,gCCDA,oBACe3B,YAAf,S,gCCDA,oBACeqB,YAAf,S,kGC+CeO,UAlCS,WACtB,MAAwCC,mBAAS,GAAjD,mBAAOhB,EAAP,KAAqBiB,EAArB,KAGMC,EAAS,kBAAMD,EAXE,SAAAE,GACvB,IAAMC,EAAMC,KAAKC,IAAI,EAAGD,KAAKE,IAAIJ,EAAwB,GAAhBE,KAAKG,SAAe,MAC7D,OAAOH,KAAKI,MAAML,GASmBM,CAAiB1B,KAMtD,OAJA2B,qBAAU,YARE,SAAAT,GAAUU,WAAWV,EAAwB,KAAhBG,KAAKG,UAS5CK,CAAMX,MAIN,eAAC,IAAMY,SAAP,WACE,cAAC,UAAD,UACE,eAAC,UAAD,WACE,8CACA,kKAMJ,cAAC,UAAD,UACE,cAAC,UAAD,CACEhC,MAAO,CACLiC,WAAY,WAFhB,SAKE,cAAC,UAAD,CAAa/B,aAAcA,a,kECpC/Bc,EAAO1B,IAAO4C,QAAV,8QAEG1C,UAAQC,IAAOD,UAAQ2C,GACjBC,SAAOC,OACVlC,WAASmC,UAIJ9C,UAAQC,KAMduB","file":"static/js/8.fcf23116.chunk.js","sourcesContent":["import styled from 'styled-components'\n\n// Constants\nimport {spacing} from 'constants/styles'\n\nconst StackItem = styled.div`\n  & + & {\n    margin-top: ${spacing.xlg};\n  }\n`\n\nexport default StackItem\n","import styled from 'styled-components'\n\n// Component\nimport Spacing from 'components/spacing'\n\n// Constants\nimport {unit} from 'constants/styles'\n\nconst ProgressBarLoaderSC = styled(Spacing)`\n  height: ${unit * 1.5}px;\n  padding: 1px;\n  border: 1px solid rgba(255, 255, 255, 0.6);\n  background: rgba(255, 255, 255, 0.3);\n`\n\nexport default ProgressBarLoaderSC\n","import styled from 'styled-components'\n\n// Constants\nimport {neutrals} from 'constants/styles'\n\nconst ProgressBarLoaderBarSC = styled.div.attrs(props => ({\n  style: {\n    transform: `scaleX(${props.currentValue / 100 || 0})`,\n  },\n}))`\n  position: relative;\n\n  height: 100%;\n  background: ${neutrals.neutral10};\n\n  transform-origin: top left;\n  transform: scaleX(0);\n  transition: 0.3s cubic-bezier(0.25, 0.7, 0.01, 0.8) transform;\n`\n\nexport default ProgressBarLoaderBarSC\n","import styled, {keyframes} from 'styled-components'\n\nconst pulse = keyframes`\n  0% {\n    transform: translateX(0);\n  }\n\n  100% {\n    transform: translateX(calc(100% - 100px));\n  }\n`\n\nconst fade = keyframes`\n  0% {\n    opacity: 0;\n  }\n\n  10% {\n    opacity: 1;\n  }\n\n  80% {\n    opacity: 1;\n  }\n\n  100% {\n    opacity: 0;\n  }\n`\n\nconst ProgressBarPulseSC = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n\n  transform-origin: top left;\n\n  animation: ${pulse} 1s cubic-bezier(0.25, 0.7, 0.01, 0.8) infinite;\n\n  &::before {\n    content: '';\n    position: relative;\n    display: block;\n    width: 100px;\n    height: 100%;\n    border-radius: 50%;\n    background: none;\n    box-shadow: 0 0 8px 1px #fff;\n    animation: ${fade} 1s ease-out infinite;\n  }\n`\n\nexport default ProgressBarPulseSC\n","import styled from 'styled-components'\n\nconst ProgressBarWrapperSC = styled.div`\n  color: #fff;\n  text-align: center;\n`\n\nexport default ProgressBarWrapperSC\n","import React from 'react'\n\n// SC\nimport ProgressBarLoaderSC from './progress-bar-loader-sc'\nimport ProgressBarLoaderBarSC from './progress-bar-loader-bar-sc'\nimport ProgressBarPulseSC from './progress-bar-pulse-sc'\nimport ProgressBarWrapperSC from './progress-bar-wrapper-sc'\n\nconst ProgressBar = ({currentValue}) => (\n  <ProgressBarWrapperSC\n    role=\"progressbar\"\n    aria-valuenow={currentValue}\n    aria-valuemin=\"0\"\n    aria-valuemax=\"100\"\n  >\n    <ProgressBarLoaderSC marginBottom=\"md\" role=\"presentation\">\n      <ProgressBarLoaderBarSC currentValue={currentValue}>\n        <ProgressBarPulseSC />\n      </ProgressBarLoaderBarSC>\n    </ProgressBarLoaderSC>\n\n    {`${currentValue}%`}\n  </ProgressBarWrapperSC>\n)\nexport default ProgressBar\n","import Card from './card'\nexport default Card\n","import StackItem from './stack-item'\nexport default StackItem\n","import ProgressBar from './progress-bar'\nexport default ProgressBar\n","import React, {useEffect, useState} from 'react'\n\n// Components\nimport Card from 'components/card'\nimport ProgressBar from 'components/progress-bar'\nimport StackItem from 'components/stack-item'\n\nconst getProgressValue = value => {\n  const num = Math.max(0, Math.min(value + Math.random() * 30, 100))\n  return Math.round(num)\n}\n\nconst timer = update => setTimeout(update, Math.random() * 2500)\n\nconst ProgressBarPage = () => {\n  const [currentValue, setCurrentValue] = useState(0)\n\n  // Set timer to simulate progress updates\n  const update = () => setCurrentValue(getProgressValue(currentValue))\n\n  useEffect(() => {\n    timer(update)\n  })\n\n  return (\n    <React.Fragment>\n      <StackItem>\n        <Card>\n          <h2>Progress Bar</h2>\n          <p>\n            This progress bar is a recreation of the progress bar design found\n            in Playstation 4's UI mimicing the design and animations.\n          </p>\n        </Card>\n      </StackItem>\n      <StackItem>\n        <Card\n          style={{\n            background: '#2c2c2c',\n          }}\n        >\n          <ProgressBar currentValue={currentValue} />\n        </Card>\n      </StackItem>\n    </React.Fragment>\n  )\n}\n\nexport default ProgressBarPage\n","import styled from 'styled-components'\n\n// Constants\nimport {border, neutrals, spacing} from 'constants/styles'\n\nconst Card = styled.section`\n  overflow: hidden;\n  padding: ${spacing.xlg} ${spacing.lg};\n  border-radius: ${border.radius};\n  background: ${neutrals.neutral00};\n  box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, 0.3);\n\n  h2 {\n    margin-bottom: ${spacing.xlg};\n    font-family: 'Roboto', sans-serif;\n    text-transform: none;\n  }\n`\n\nexport default Card\n"],"sourceRoot":""}